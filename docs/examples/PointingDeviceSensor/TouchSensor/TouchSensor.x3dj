{ "X3D": {
    "encoding": "UTF-8",
    "@profile": "Interchange",
    "@version": "4.0",
    "@xsd:noNamespaceSchemaLocation": "http://www.web3d.org/specifications/x3d-4.0.xsd",
    "JSON schema": "http://www.web3d.org/specifications/x3d-4.0-JSONSchema.json",
    "head": {
      "meta": [
        {
          "@name": "created",
          "@content": "Tue, 07 Feb 2023 21:26:14 GMT"
        },
        {
          "@name": "comment",
          "@content": "Rise and Shine"
        },
        {
          "@name": "creator",
          "@content": "Holger Seelig"
        },
        {
          "@name": "generator",
          "@content": "Sunrize X3D Editor V1.0.17, https://create3000.github.io/sunrize/"
        },
        {
          "@name": "identifier",
          "@content": "file:///Users/holger/Desktop/X_ITE/media/docs/examples/PointingDeviceSensor/TouchSensor/TouchSensor.O.x3d"
        },
        {
          "@name": "modified",
          "@content": "Sun, 16 Apr 2023 13:04:59 GMT"
        },
        {
          "@name": "converter",
          "@content": "x3d-tidy V1.0.14, https://www.npmjs.com/package/x3d-tidy"
        },
        {
          "@name": "converted",
          "@content": "Mon, 29 May 2023 18:01:19 GMT"
        }
      ],
      "component": [
        {
          "@name": "Scripting",
          "@level": 1
        }
      ],
      "unit": [
        {
          "@category": "angle",
          "@name": "degree",
          "@conversionFactor": 0.0174532925199433
        }
      ]
    },
    "Scene": {
      "-children": [
        { "ProtoDeclare":
          {
            "@name":"PointingObjects",
            "ProtoInterface": {

            },
            "ProtoBody": {
              "-children": [
                { "Group":
                  {
                    "@DEF": "_1"
                  }
                },
                { "TimeSensor":
                  {
                    "@DEF": "_2",
                    "@cycleInterval": 10,
                    "@loop": true
                  }
                },
                { "OrientationInterpolator":
                  {
                    "@DEF": "_3",
                    "@key": [ 0, 0.25, 0.5, 0.75, 1 ],
                    "@keyValue": [ 0, 0, 1, 0, 0, 1, 0, 90, 0, 1, 0, 180, 0, 1, 0, 270, 0, 1, 0, 0 ]
                  }
                },
                { "Script":
                  {
                    "@DEF": "Script",
                    "field": [
                      {
                        "@accessType": "inputOnly",
                        "@type": "SFBool",
                        "@name": "set_over"
                      },
                      {
                        "@accessType": "initializeOnly",
                        "@type": "SFNode",
                        "@name": "group",
                        "-children": [
                          { "Group":
                            {
                              "@USE": "_1"
                            }
                          }
                        ]
                      },
                      {
                        "@accessType": "initializeOnly",
                        "@type": "SFNode",
                        "@name": "texture",
                        "-children": [
                          { "PixelTexture":
                            {
                              "@image": [ 2, 2, 1, 50, 150, 150, 50 ]
                            }
                          }
                        ]
                      },
                      {
                        "@accessType": "initializeOnly",
                        "@type": "MFNode",
                        "@name": "geometries",
                        "-children": [
                          { "Box":
                            {
                            }
                          },
                          { "Cone":
                            {
                            }
                          },
                          { "Sphere":
                            {
                            }
                          }
                        ]
                      },
                      {
                        "@accessType": "initializeOnly",
                        "@type": "SFNode",
                        "@name": "interpolator",
                        "-children": [
                          { "OrientationInterpolator":
                            {
                              "@USE": "_3"
                            }
                          }
                        ]
                      },
                      {
                        "@accessType": "initializeOnly",
                        "@type": "MFNode",
                        "@name": "touchSensors"
                      },
                      {
                        "@accessType": "initializeOnly",
                        "@type": "MFNode",
                        "@name": "materials"
                      }
                    ],
                    "#sourceText": [
"ecmascript:",
"",
"function initialize ()",
"{",
"   // Add code here.",
"",
"   for (let i = 0; i < 350; ++ i)",
"      createNode ();",
"}",
"",
"function createNode ()",
"{",
"   const",
"      scene       = Browser .currentScene,",
"      self        = scene .getNamedNode (\"Script\"),",
"      transform   = scene .createNode (\"Transform\"),",
"      shape       = scene .createNode (\"Shape\"),",
"      appearance  = scene .createNode (\"Appearance\"),",
"      material    = scene .createNode (\"Material\"),",
"      touchSensor = scene .createNode (\"TouchSensor\");",
"",
"   material .diffuseColor = new SFColor (Math .random (), Math .random (), Math .random ());",
"",
"   appearance .material = material;",
"   appearance .texture  = texture;",
"",
"   shape .appearance = appearance;",
"   shape .geometry   = geometries [Math .floor (Math .random () * 3)];",
"",
"   transform .translation = new SFVec3f (random (), random (), random ());",
"   transform .children .push (shape, touchSensor);",
"",
"   scene .addRoute (interpolator, \"value_changed\", transform, \"set_rotation\");",
"",
"   scene .addRoute (touchSensor, \"isOver\", self, \"set_over\");",
"   ",
"   group .children .push (transform);",
"   touchSensors .push (touchSensor);",
"   materials .push (material);",
"}",
"",
"function random (min = -16, max = 16)",
"{",
"   return min + Math .random () * (max - min)",
"}",
"",
"let lastIndex = -1;",
"",
"function set_over (value, time)",
"{",
"   const index = touchSensors .findIndex (s => s .isOver);",
"",
"   if (lastIndex > -1)",
"      materials [lastIndex] .emissiveColor = new SFColor (0, 0, 0);",
"",
"   if (index > -1)",
"      materials [index] .emissiveColor = new SFColor (1, 1, 0);",
"",
"   lastIndex = index;",
"}",
""
                    ]
                  }
                },
                { "ROUTE":
                  {
                    "@fromNode": "_2",
                    "@fromField": "fraction_changed",
                    "@toNode": "_3",
                    "@toField": "set_fraction"
                  }
                }
              ]
            }
          }
        },
        { "Background":
          {
            "@DEF": "White",
            "@skyColor": [ 1, 1, 1 ]
          }
        },
        { "Viewpoint":
          {
            "@description": "Initial View",
            "@position": [ 0, 0, 30 ]
          }
        },
        { "ProtoInstance":
          {
            "@name": "PointingObjects"
          }
        }
      ]
    }
  }
}
