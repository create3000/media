{ "X3D": {
    "encoding": "UTF-8",
    "@profile": "Interchange",
    "@version": "3.3",
    "@xsd:noNamespaceSchemaLocation": "http://www.web3d.org/specifications/x3d-4.0.xsd",
    "JSON schema": "http://www.web3d.org/specifications/x3d-4.0-JSONSchema.json",
    "head": {
      "meta": [
        {
          "@name": "comment",
          "@content": "World of Titania"
        },
        {
          "@name": "created",
          "@content": "Tue, 10 Jul 2018 16:12:19 GMT"
        },
        {
          "@name": "creator",
          "@content": "Holger Seelig"
        },
        {
          "@name": "generator",
          "@content": "x3d-tidy V1.0.6, https://github.com/create3000/x3d-tidy#readme"
        },
        {
          "@name": "identifier",
          "@content": "file:///home/holger/Projekte/Sunrise/src/drive/user/test/components/Rendering/ColorRGBA/ColorRGBA.O.x3d"
        },
        {
          "@name": "modified",
          "@content": "Mon, 07 Jan 2019 03:23:50 GMT"
        }
      ],
      "component": [
        {
          "@name": "CADGeometry",
          "@level": 2
        },
        {
          "@name": "Scripting",
          "@level": 1
        }
      ]
    },
    "Scene": {
      "-children": [
        { "ExternProtoDeclare":
          {
            "@name":"Noise",
            "field": [
              {
                "@accessType": "inputOutput",
                "@type": "SFBool",
                "@name": "enabled"
              },
              {
                "@accessType": "inputOutput",
                "@type": "SFFloat",
                "@name": "amplitude"
              },
              {
                "@accessType": "inputOutput",
                "@type": "SFFloat",
                "@name": "frequency"
              },
              {
                "@accessType": "inputOutput",
                "@type": "SFFloat",
                "@name": "phase"
              },
              {
                "@accessType": "outputOnly",
                "@type": "SFFloat",
                "@name": "value_changed"
              }
            ],
            "@url": [ "assets/Noise.x3d#Noise" ]
          }
        },
        { "ProtoDeclare":
          {
            "@name":"GraphicDisplay",
            "ProtoInterface": {
              "field": [
                {
                  "@accessType": "inputOnly",
                  "@type": "SFFloat",
                  "@name": "set_value"
                },
                {
                  "@accessType": "inputOutput",
                  "@type": "SFInt32",
                  "@name": "width",
                  "@value": 10
                },
                {
                  "@accessType": "inputOutput",
                  "@type": "SFInt32",
                  "@name": "height",
                  "@value": 10
                },
                {
                  "@accessType": "inputOutput",
                  "@type": "SFVec2f",
                  "@name": "size",
                  "@value": [ 1, 1 ]
                },
                {
                  "@accessType": "inputOutput",
                  "@type": "SFVec2f",
                  "@name": "spacing",
                  "@value": [ 0.1, 0.1 ]
                }
              ]
            },
            "ProtoBody": {
              "-children": [
                { "QuadSet":
                  {
                    "@DEF": "_1",
                    "@colorPerVertex": false,
                    "-color": { "ColorRGBA":
                      {
                        "@color": [ 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0.6, 0, 1, 1, 0.6, 0, 1, 1, 0.6, 0, 1, 1, 0.6, 0, 1, 1, 0.6, 0, 1, 1, 0.6, 0, 1, 1, 0.6, 0, 1, 1, 0.6, 0, 1, 1, 0.6, 0, 1, 1, 0.6, 0, 1, 0.8, 1, 0, 1, 0.8, 1, 0, 1, 0.8, 1, 0, 1, 0.8, 1, 0, 1, 0.8, 1, 0, 1, 0.8, 1, 0, 1, 0.8, 1, 0, 1, 0.8, 1, 0, 1, 0.8, 1, 0, 1, 0.8, 1, 0, 1, 0.2, 1, 0, 1, 0.2, 1, 0, 1, 0.2, 1, 0, 1, 0.2, 1, 0, 1, 0.2, 1, 0, 1, 0.2, 1, 0, 1, 0.2, 1, 0, 1, 0.2, 1, 0, 1, 0.2, 1, 0, 1, 0.2, 1, 0, 1, 0, 1, 0.4, 1, 0, 1, 0.4, 1, 0, 1, 0.4, 1, 0, 1, 0.4, 1, 0, 1, 0.4, 1, 0, 1, 0.4, 1, 0, 1, 0.4, 1, 0, 1, 0.4, 1, 0, 1, 0.4, 1, 0, 1, 0.4, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0.4, 1, 1, 0, 0.4, 1, 1, 0, 0.4, 1, 1, 0, 0.4, 1, 1, 0, 0.4, 1, 1, 0, 0.4, 1, 1, 0, 0.4, 1, 1, 0, 0.4, 1, 1, 0, 0.4, 1, 1, 0, 0.4, 1, 1, 0.2, 0, 1, 1, 0.2, 0, 1, 1, 0.2, 0, 1, 1, 0.2, 0, 1, 1, 0.2, 0, 1, 1, 0.2, 0, 1, 1, 0.2, 0, 1, 1, 0.2, 0, 1, 1, 0.2, 0, 1, 1, 0.2, 0, 1, 1, 0.8, 0, 1, 1, 0.8, 0, 1, 1, 0.8, 0, 1, 1, 0.8, 0, 1, 1, 0.8, 0, 1, 1, 0.8, 0, 1, 1, 0.8, 0, 1, 1, 0.8, 0, 1, 1, 0.8, 0, 1, 1, 0.8, 0, 1, 1, 1, 0, 0.6, 1, 1, 0, 0.6, 1, 1, 0, 0.6, 1, 1, 0, 0.6, 1, 1, 0, 0.6, 1, 1, 0, 0.6, 1, 1, 0, 0.6, 1, 1, 0, 0.6, 1, 1, 0, 0.6, 1, 1, 0, 0.6, 1 ]
                      }
                    },
                    "-coord": { "Coordinate":
                      {
                        "@point": [ 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1.1, 0, 1, 1.1, 0, 1, 2.1, 0, 0, 2.1, 0, 0, 2.2, 0, 1, 2.2, 0, 1, 3.2, 0, 0, 3.2, 0, 0, 3.3, 0, 1, 3.3, 0, 1, 4.3, 0, 0, 4.3, 0, 0, 4.4, 0, 1, 4.4, 0, 1, 5.4, 0, 0, 5.4, 0, 0, 5.5, 0, 1, 5.5, 0, 1, 6.5, 0, 0, 6.5, 0, 0, 6.6, 0, 1, 6.6, 0, 1, 7.6, 0, 0, 7.6, 0, 0, 7.7, 0, 1, 7.7, 0, 1, 8.7, 0, 0, 8.7, 0, 0, 8.8, 0, 1, 8.8, 0, 1, 9.8, 0, 0, 9.8, 0, 0, 9.9, 0, 1, 9.9, 0, 1, 10.9, 0, 0, 10.9, 0, 1.1, 0, 0, 2.1, 0, 0, 2.1, 1, 0, 1.1, 1, 0, 1.1, 1.1, 0, 2.1, 1.1, 0, 2.1, 2.1, 0, 1.1, 2.1, 0, 1.1, 2.2, 0, 2.1, 2.2, 0, 2.1, 3.2, 0, 1.1, 3.2, 0, 1.1, 3.3, 0, 2.1, 3.3, 0, 2.1, 4.3, 0, 1.1, 4.3, 0, 1.1, 4.4, 0, 2.1, 4.4, 0, 2.1, 5.4, 0, 1.1, 5.4, 0, 1.1, 5.5, 0, 2.1, 5.5, 0, 2.1, 6.5, 0, 1.1, 6.5, 0, 1.1, 6.6, 0, 2.1, 6.6, 0, 2.1, 7.6, 0, 1.1, 7.6, 0, 1.1, 7.7, 0, 2.1, 7.7, 0, 2.1, 8.7, 0, 1.1, 8.7, 0, 1.1, 8.8, 0, 2.1, 8.8, 0, 2.1, 9.8, 0, 1.1, 9.8, 0, 1.1, 9.9, 0, 2.1, 9.9, 0, 2.1, 10.9, 0, 1.1, 10.9, 0, 2.2, 0, 0, 3.2, 0, 0, 3.2, 1, 0, 2.2, 1, 0, 2.2, 1.1, 0, 3.2, 1.1, 0, 3.2, 2.1, 0, 2.2, 2.1, 0, 2.2, 2.2, 0, 3.2, 2.2, 0, 3.2, 3.2, 0, 2.2, 3.2, 0, 2.2, 3.3, 0, 3.2, 3.3, 0, 3.2, 4.3, 0, 2.2, 4.3, 0, 2.2, 4.4, 0, 3.2, 4.4, 0, 3.2, 5.4, 0, 2.2, 5.4, 0, 2.2, 5.5, 0, 3.2, 5.5, 0, 3.2, 6.5, 0, 2.2, 6.5, 0, 2.2, 6.6, 0, 3.2, 6.6, 0, 3.2, 7.6, 0, 2.2, 7.6, 0, 2.2, 7.7, 0, 3.2, 7.7, 0, 3.2, 8.7, 0, 2.2, 8.7, 0, 2.2, 8.8, 0, 3.2, 8.8, 0, 3.2, 9.8, 0, 2.2, 9.8, 0, 2.2, 9.9, 0, 3.2, 9.9, 0, 3.2, 10.9, 0, 2.2, 10.9, 0, 3.3, 0, 0, 4.3, 0, 0, 4.3, 1, 0, 3.3, 1, 0, 3.3, 1.1, 0, 4.3, 1.1, 0, 4.3, 2.1, 0, 3.3, 2.1, 0, 3.3, 2.2, 0, 4.3, 2.2, 0, 4.3, 3.2, 0, 3.3, 3.2, 0, 3.3, 3.3, 0, 4.3, 3.3, 0, 4.3, 4.3, 0, 3.3, 4.3, 0, 3.3, 4.4, 0, 4.3, 4.4, 0, 4.3, 5.4, 0, 3.3, 5.4, 0, 3.3, 5.5, 0, 4.3, 5.5, 0, 4.3, 6.5, 0, 3.3, 6.5, 0, 3.3, 6.6, 0, 4.3, 6.6, 0, 4.3, 7.6, 0, 3.3, 7.6, 0, 3.3, 7.7, 0, 4.3, 7.7, 0, 4.3, 8.7, 0, 3.3, 8.7, 0, 3.3, 8.8, 0, 4.3, 8.8, 0, 4.3, 9.8, 0, 3.3, 9.8, 0, 3.3, 9.9, 0, 4.3, 9.9, 0, 4.3, 10.9, 0, 3.3, 10.9, 0, 4.4, 0, 0, 5.4, 0, 0, 5.4, 1, 0, 4.4, 1, 0, 4.4, 1.1, 0, 5.4, 1.1, 0, 5.4, 2.1, 0, 4.4, 2.1, 0, 4.4, 2.2, 0, 5.4, 2.2, 0, 5.4, 3.2, 0, 4.4, 3.2, 0, 4.4, 3.3, 0, 5.4, 3.3, 0, 5.4, 4.3, 0, 4.4, 4.3, 0, 4.4, 4.4, 0, 5.4, 4.4, 0, 5.4, 5.4, 0, 4.4, 5.4, 0, 4.4, 5.5, 0, 5.4, 5.5, 0, 5.4, 6.5, 0, 4.4, 6.5, 0, 4.4, 6.6, 0, 5.4, 6.6, 0, 5.4, 7.6, 0, 4.4, 7.6, 0, 4.4, 7.7, 0, 5.4, 7.7, 0, 5.4, 8.7, 0, 4.4, 8.7, 0, 4.4, 8.8, 0, 5.4, 8.8, 0, 5.4, 9.8, 0, 4.4, 9.8, 0, 4.4, 9.9, 0, 5.4, 9.9, 0, 5.4, 10.9, 0, 4.4, 10.9, 0, 5.5, 0, 0, 6.5, 0, 0, 6.5, 1, 0, 5.5, 1, 0, 5.5, 1.1, 0, 6.5, 1.1, 0, 6.5, 2.1, 0, 5.5, 2.1, 0, 5.5, 2.2, 0, 6.5, 2.2, 0, 6.5, 3.2, 0, 5.5, 3.2, 0, 5.5, 3.3, 0, 6.5, 3.3, 0, 6.5, 4.3, 0, 5.5, 4.3, 0, 5.5, 4.4, 0, 6.5, 4.4, 0, 6.5, 5.4, 0, 5.5, 5.4, 0, 5.5, 5.5, 0, 6.5, 5.5, 0, 6.5, 6.5, 0, 5.5, 6.5, 0, 5.5, 6.6, 0, 6.5, 6.6, 0, 6.5, 7.6, 0, 5.5, 7.6, 0, 5.5, 7.7, 0, 6.5, 7.7, 0, 6.5, 8.7, 0, 5.5, 8.7, 0, 5.5, 8.8, 0, 6.5, 8.8, 0, 6.5, 9.8, 0, 5.5, 9.8, 0, 5.5, 9.9, 0, 6.5, 9.9, 0, 6.5, 10.9, 0, 5.5, 10.9, 0, 6.6, 0, 0, 7.6, 0, 0, 7.6, 1, 0, 6.6, 1, 0, 6.6, 1.1, 0, 7.6, 1.1, 0, 7.6, 2.1, 0, 6.6, 2.1, 0, 6.6, 2.2, 0, 7.6, 2.2, 0, 7.6, 3.2, 0, 6.6, 3.2, 0, 6.6, 3.3, 0, 7.6, 3.3, 0, 7.6, 4.3, 0, 6.6, 4.3, 0, 6.6, 4.4, 0, 7.6, 4.4, 0, 7.6, 5.4, 0, 6.6, 5.4, 0, 6.6, 5.5, 0, 7.6, 5.5, 0, 7.6, 6.5, 0, 6.6, 6.5, 0, 6.6, 6.6, 0, 7.6, 6.6, 0, 7.6, 7.6, 0, 6.6, 7.6, 0, 6.6, 7.7, 0, 7.6, 7.7, 0, 7.6, 8.7, 0, 6.6, 8.7, 0, 6.6, 8.8, 0, 7.6, 8.8, 0, 7.6, 9.8, 0, 6.6, 9.8, 0, 6.6, 9.9, 0, 7.6, 9.9, 0, 7.6, 10.9, 0, 6.6, 10.9, 0, 7.7, 0, 0, 8.7, 0, 0, 8.7, 1, 0, 7.7, 1, 0, 7.7, 1.1, 0, 8.7, 1.1, 0, 8.7, 2.1, 0, 7.7, 2.1, 0, 7.7, 2.2, 0, 8.7, 2.2, 0, 8.7, 3.2, 0, 7.7, 3.2, 0, 7.7, 3.3, 0, 8.7, 3.3, 0, 8.7, 4.3, 0, 7.7, 4.3, 0, 7.7, 4.4, 0, 8.7, 4.4, 0, 8.7, 5.4, 0, 7.7, 5.4, 0, 7.7, 5.5, 0, 8.7, 5.5, 0, 8.7, 6.5, 0, 7.7, 6.5, 0, 7.7, 6.6, 0, 8.7, 6.6, 0, 8.7, 7.6, 0, 7.7, 7.6, 0, 7.7, 7.7, 0, 8.7, 7.7, 0, 8.7, 8.7, 0, 7.7, 8.7, 0, 7.7, 8.8, 0, 8.7, 8.8, 0, 8.7, 9.8, 0, 7.7, 9.8, 0, 7.7, 9.9, 0, 8.7, 9.9, 0, 8.7, 10.9, 0, 7.7, 10.9, 0, 8.8, 0, 0, 9.8, 0, 0, 9.8, 1, 0, 8.8, 1, 0, 8.8, 1.1, 0, 9.8, 1.1, 0, 9.8, 2.1, 0, 8.8, 2.1, 0, 8.8, 2.2, 0, 9.8, 2.2, 0, 9.8, 3.2, 0, 8.8, 3.2, 0, 8.8, 3.3, 0, 9.8, 3.3, 0, 9.8, 4.3, 0, 8.8, 4.3, 0, 8.8, 4.4, 0, 9.8, 4.4, 0, 9.8, 5.4, 0, 8.8, 5.4, 0, 8.8, 5.5, 0, 9.8, 5.5, 0, 9.8, 6.5, 0, 8.8, 6.5, 0, 8.8, 6.6, 0, 9.8, 6.6, 0, 9.8, 7.6, 0, 8.8, 7.6, 0, 8.8, 7.7, 0, 9.8, 7.7, 0, 9.8, 8.7, 0, 8.8, 8.7, 0, 8.8, 8.8, 0, 9.8, 8.8, 0, 9.8, 9.8, 0, 8.8, 9.8, 0, 8.8, 9.9, 0, 9.8, 9.9, 0, 9.8, 10.9, 0, 8.8, 10.9, 0, 9.9, 0, 0, 10.9, 0, 0, 10.9, 1, 0, 9.9, 1, 0, 9.9, 1.1, 0, 10.9, 1.1, 0, 10.9, 2.1, 0, 9.9, 2.1, 0, 9.9, 2.2, 0, 10.9, 2.2, 0, 10.9, 3.2, 0, 9.9, 3.2, 0, 9.9, 3.3, 0, 10.9, 3.3, 0, 10.9, 4.3, 0, 9.9, 4.3, 0, 9.9, 4.4, 0, 10.9, 4.4, 0, 10.9, 5.4, 0, 9.9, 5.4, 0, 9.9, 5.5, 0, 10.9, 5.5, 0, 10.9, 6.5, 0, 9.9, 6.5, 0, 9.9, 6.6, 0, 10.9, 6.6, 0, 10.9, 7.6, 0, 9.9, 7.6, 0, 9.9, 7.7, 0, 10.9, 7.7, 0, 10.9, 8.7, 0, 9.9, 8.7, 0, 9.9, 8.8, 0, 10.9, 8.8, 0, 10.9, 9.8, 0, 9.9, 9.8, 0, 9.9, 9.9, 0, 10.9, 9.9, 0, 10.9, 10.9, 0, 9.9, 10.9, 0 ]
                      }
                    }
                  }
                },
                { "Script":
                  {
                    "@DEF": "GraphicDisplayScript",
                    "@directOutput": true,
                    "field": [
                      {
                        "@accessType": "inputOnly",
                        "@type": "SFFloat",
                        "@name": "set_value"
                      },
                      {
                        "@accessType": "inputOutput",
                        "@type": "SFTime",
                        "@name": "updateInterval",
                        "@value": 0.05
                      },
                      {
                        "@accessType": "inputOutput",
                        "@type": "SFInt32",
                        "@name": "width"
                      },
                      {
                        "@accessType": "inputOutput",
                        "@type": "SFInt32",
                        "@name": "height"
                      },
                      {
                        "@accessType": "inputOutput",
                        "@type": "SFVec2f",
                        "@name": "size"
                      },
                      {
                        "@accessType": "inputOutput",
                        "@type": "SFVec2f",
                        "@name": "spacing"
                      },
                      {
                        "@accessType": "inputOutput",
                        "@type": "SFNode",
                        "@name": "geometry",
                        "-children": [
                          { "QuadSet":
                            {
                              "@USE": "_1"
                            }
                          }
                        ]
                      }
                    ],
                    "#sourceText": [
"ecmascript:",
"",
"var",
"\tpoints   = [ ],",
"\tlastTime = 0;",
"",
"function initialize ()",
"{",
"\tbuild ();",
"}",
"",
"function set_value (value, time)",
"{",
"\tif (lastTime == 0)",
"\t\tlastTime = time;",
"",
"\tvar dt = time - lastTime;",
"",
"\tif (dt < updateInterval)",
"\t\treturn;",
"\t\t",
"\tif (points .length > width)",
"\t\tpoints .shift ();",
"",
"\tpoints .push (value);",
"\t",
"\tlastTime = time;",
"\t",
"\tanimate ();",
"}",
"",
"function set_width ()",
"{",
"\tbuild ();",
"}",
"",
"function set_height ()",
"{",
"\tbuild ();",
"}",
"",
"function set_size ()",
"{",
"\tbuild ();",
"}",
"",
"function set_spacing ()",
"{",
"\tbuild ();",
"}",
"",
"function build ()",
"{",
"\tvar",
"\t\thsva  = new SFColorRGBA (1, 1, 1, 1),",
"\t\tcolor = geometry .color .color,",
"\t\tcoord = geometry .coord .point;",
"",
"\tlastTime       = 0;",
"\tpoints .length = 0;",
"\tcolor .length  = 0;",
"\tcoord .length  = 0;",
"",
"\tfor (var w = 0; w < width; ++ w)",
"\t{",
"\t\tfor (var h = 0; h < height; ++ h)",
"\t\t{",
"\t\t\tvar",
"\t\t\t\tx1  = size .x * w + spacing .x * w,",
"\t\t\t\tx2  = x1 + size .x,",
"\t\t\t\ty1  = size .y * h + spacing .y * h,",
"\t\t\t\ty2  = y1 + size .y",
"\t\t\t\thue = w / width * 2 * Math .PI;",
"",
"\t\t\thsva .setHSVA (hue, 1, 1, 1);",
"",
"\t\t\tcolor .push (hsva);",
"\t\t\t\t",
"\t\t\tcoord .push (new SFVec3f (x1, y1, 0));",
"\t\t\tcoord .push (new SFVec3f (x2, y1, 0));",
"\t\t\tcoord .push (new SFVec3f (x2, y2, 0));",
"\t\t\tcoord .push (new SFVec3f (x1, y2, 0));",
"\t\t}",
"\t}",
"}",
"",
"function animate ()",
"{",
"\tvar color = geometry .color .color;",
"\t\t",
"\tfor (var w = 0; w < points .length; ++ w)",
"\t{",
"\t\tvar value = (points [w] + 1) * 0.5 * height;",
"",
"\t\tfor (var h = 0; h < height; ++ h)",
"\t\t{",
"\t\t\tvar",
"\t\t\t\ti = w * height + h,",
"\t\t\t\tc = color [i];",
"\t\t",
"\t\t\tif (value > h)",
"\t\t\t{",
"\t\t\t\tc .a = 1;",
"\t\t\t}",
"\t\t\telse",
"\t\t\t{",
"\t\t\t\tif (c .a == 1)",
"\t\t\t\t\tc .a = 0.5;",
"\t\t\t\telse",
"\t\t\t\t\tc .a *= 0.8;",
"\t\t\t}",
"\t\t}",
"\t}",
"}"
                    ],
                    "IS": {
                      "connect": [
                        {
                          "@nodeField": "set_value",
                          "@protoField": "set_value"
                        },
                        {
                          "@nodeField": "width",
                          "@protoField": "width"
                        },
                        {
                          "@nodeField": "height",
                          "@protoField": "height"
                        },
                        {
                          "@nodeField": "size",
                          "@protoField": "size"
                        },
                        {
                          "@nodeField": "spacing",
                          "@protoField": "spacing"
                        }
                      ]
                    }
                  }
                }
              ]
            }
          }
        },
        { "WorldInfo":
          {
          }
        },
        { "NavigationInfo":
          {
            "@type": [ "NONE" ],
            "@headlight": false
          }
        },
        { "Viewpoint":
          {
            "@position": [ 19.2, 8.395, 29.0642 ],
            "@centerOfRotation": [ 19.2, 8.975, 0 ]
          }
        },
        { "DirectionalLight":
          {
            "@direction": [ 0, -1, 0 ]
          }
        },
        { "ProtoInstance":
          {
            "@DEF": "_2",
            "@name": "Noise",
            "fieldValue": [
              {
                "@name": "enabled",
                "@value": true
              },
              {
                "@name": "frequency",
                "@value": 2.4
              }
            ]
          }
        },
        { "Transform":
          {
            "@DEF": "Display",
            "-children": [
              { "Shape":
                {
                  "-geometry": { "ProtoInstance":
                    {
                      "@DEF": "_3",
                      "@name": "GraphicDisplay",
                      "fieldValue": [
                        {
                          "@name": "width",
                          "@value": 35
                        },
                        {
                          "@name": "height",
                          "@value": 40
                        },
                        {
                          "@name": "size",
                          "@value": [ 1, 0.4 ]
                        }
                      ]
                    }
                  }
                }
              }
            ]
          }
        },
        { "Transform":
          {
            "@DEF": "DisplayReflection",
            "@rotation": [ 0, 0.707106781188933, -0.707106781184162, 3.1415978482863 ],
            "@scale": [ -1, -1, -1 ],
            "-children": [
              { "Shape":
                {
                  "-appearance": { "Appearance":
                    {
                      "-material": { "Material":
                        {
                          "@transparency": 0.77
                        }
                      }
                    }
                  },
                  "-geometry": { "ProtoInstance":
                    {
                      "@name": "GraphicDisplay",
                      "@USE": "_3"
                    }
                  }
                }
              }
            ]
          }
        },
        { "ROUTE":
          {
            "@fromNode": "_2",
            "@fromField": "value_changed",
            "@toNode": "_3",
            "@toField": "set_value"
          }
        }
      ]
    }
  }
}
