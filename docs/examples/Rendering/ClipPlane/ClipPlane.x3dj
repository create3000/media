{ "X3D": {
    "encoding": "UTF-8",
    "@profile": "Interchange",
    "@version": "3.3",
    "@xsd:noNamespaceSchemaLocation": "http://www.web3d.org/specifications/x3d-4.0.xsd",
    "JSON schema": "http://www.web3d.org/specifications/x3d-4.0-JSONSchema.json",
    "head": {
      "meta": [
        {
          "@name": "comment",
          "@content": "World of Titania"
        },
        {
          "@name": "created",
          "@content": "Tue, 11 Oct 2016 17:39:49 GMT"
        },
        {
          "@name": "creator",
          "@content": "Holger Seelig"
        },
        {
          "@name": "generator",
          "@content": "Titania V4.6.7, http://titania.create3000.de"
        },
        {
          "@name": "identifier",
          "@content": "file:///home/holger/Projekte/Sunrise/src/drive/user/test/components/Rendering/ClipPlane/ClipPlane.O.x3d"
        },
        {
          "@name": "modified",
          "@content": "Thu, 07 Nov 2019 13:01:51 GMT"
        },
        {
          "@name": "converter",
          "@content": "x3d-tidy V1.0.9, https://github.com/create3000/x3d-tidy#readme"
        },
        {
          "@name": "converted",
          "@content": "Wed, 08 Feb 2023 17:37:45 GMT"
        }
      ],
      "component": [
        {
          "@name": "Geometry2D",
          "@level": 2
        },
        {
          "@name": "Scripting",
          "@level": 1
        }
      ]
    },
    "Scene": {
      "-children": [
        { "ProtoDeclare":
          {
            "@name":"Grid",
            "ProtoInterface": {
              "field": [
                {
                  "@accessType": "inputOutput",
                  "@type": "SFVec3f",
                  "@name": "translation"
                },
                {
                  "@accessType": "inputOutput",
                  "@type": "SFRotation",
                  "@name": "rotation"
                },
                {
                  "@accessType": "inputOutput",
                  "@type": "SFVec3f",
                  "@name": "scale",
                  "@value": [ 1, 1, 1 ]
                },
                {
                  "@accessType": "inputOutput",
                  "@type": "MFInt32",
                  "@name": "dimension",
                  "@value": [ 10, 10, 10 ]
                },
                {
                  "@accessType": "inputOutput",
                  "@type": "MFInt32",
                  "@name": "majorLineEvery",
                  "@value": [ 5, 5, 5 ]
                },
                {
                  "@accessType": "inputOutput",
                  "@type": "MFInt32",
                  "@name": "majorLineOffset",
                  "@value": [ 0, 0, 0 ]
                },
                {
                  "@accessType": "inputOutput",
                  "@type": "SFColor",
                  "@name": "color",
                  "@value": [ 0.5, 0.5, 0.5 ]
                },
                {
                  "@accessType": "inputOutput",
                  "@type": "SFFloat",
                  "@name": "transparency",
                  "@value": 0.61803
                },
                {
                  "@accessType": "inputOutput",
                  "@type": "SFColor",
                  "@name": "lineColor",
                  "@value": [ 1, 0.7, 0.7 ]
                },
                {
                  "@accessType": "inputOutput",
                  "@type": "SFFloat",
                  "@name": "lineTransparency",
                  "@value": 0.8
                },
                {
                  "@accessType": "inputOutput",
                  "@type": "SFColor",
                  "@name": "majorLineColor",
                  "@value": [ 1, 0.7, 0.7 ]
                },
                {
                  "@accessType": "inputOutput",
                  "@type": "SFFloat",
                  "@name": "majorLineTransparency",
                  "@value": 0.6
                },
                {
                  "@accessType": "initializeOnly",
                  "@type": "SFBool",
                  "@name": "solid",
                  "@value": true
                }
              ]
            },
            "ProtoBody": {
              "-children": [
                { "Transform":
                  {
                    "-children": [
                      { "Transform":
                        {
                          "@DEF": "Plane",
                          "@rotation": [ -3.09087122910219e-8, 0.70710528118436, 0.707108281185553, 3.14159 ],
                          "@scale": [ 10, 10, 1 ],
                          "-children": [
                            { "Shape":
                              {
                                "-appearance": { "Appearance":
                                  {
                                    "-material": { "Material":
                                      {
                                        "@DEF": "Material2",
                                        "@diffuseColor": [ 0, 0, 0 ],
                                        "IS": {
                                          "connect": [
                                            {
                                              "@nodeField": "emissiveColor",
                                              "@protoField": "color"
                                            },
                                            {
                                              "@nodeField": "transparency",
                                              "@protoField": "transparency"
                                            }
                                          ]
                                        }
                                      }
                                    }
                                  }
                                },
                                "-geometry": { "Rectangle2D":
                                  {
                                    "@size": [ 1, 1 ],
                                    "IS": {
                                      "connect": [
                                        {
                                          "@nodeField": "solid",
                                          "@protoField": "solid"
                                        }
                                      ]
                                    }
                                  }
                                }
                              }
                            }
                          ]
                        }
                      },
                      { "Shape":
                        {
                          "@DEF": "MajorGrid",
                          "-appearance": { "Appearance":
                            {
                              "-material": { "Material":
                                {
                                  "@DEF": "MajorMaterial",
                                  "IS": {
                                    "connect": [
                                      {
                                        "@nodeField": "emissiveColor",
                                        "@protoField": "majorLineColor"
                                      },
                                      {
                                        "@nodeField": "transparency",
                                        "@protoField": "majorLineTransparency"
                                      }
                                    ]
                                  }
                                }
                              }
                            }
                          },
                          "-geometry": { "IndexedLineSet":
                            {
                              "@DEF": "MajorGrid_1",
                              "@coordIndex": [ 0, 1, -1, 2, 3, -1, 4, 5, -1, 6, 7, -1, 8, 9, -1, 10, 11, -1 ],
                              "-coord": { "Coordinate":
                                {
                                  "@point": [ -5, 0, -5.25, -5, 0, 5.25, 0, 0, -5.25, 0, 0, 5.25, 5, 0, -5.25, 5, 0, 5.25, -5.25, 0, -5, 5.25, 0, -5, -5.25, 0, 0, 5.25, 0, 0, -5.25, 0, 5, 5.25, 0, 5 ]
                                }
                              }
                            }
                          }
                        }
                      },
                      { "Shape":
                        {
                          "@DEF": "MinorGrid",
                          "-appearance": { "Appearance":
                            {
                              "-material": { "Material":
                                {
                                  "@DEF": "MinorMaterial",
                                  "IS": {
                                    "connect": [
                                      {
                                        "@nodeField": "emissiveColor",
                                        "@protoField": "lineColor"
                                      },
                                      {
                                        "@nodeField": "transparency",
                                        "@protoField": "lineTransparency"
                                      }
                                    ]
                                  }
                                }
                              }
                            }
                          },
                          "-geometry": { "IndexedLineSet":
                            {
                              "@DEF": "MinorGrid_1",
                              "@coordIndex": [ 0, 1, -1, 2, 3, -1, 4, 5, -1, 6, 7, -1, 8, 9, -1, 10, 11, -1, 12, 13, -1, 14, 15, -1, 16, 17, -1, 18, 19, -1, 20, 21, -1, 22, 23, -1, 24, 25, -1, 26, 27, -1, 28, 29, -1, 30, 31, -1 ],
                              "-coord": { "Coordinate":
                                {
                                  "@point": [ -4, 0, -5, -4, 0, 5, -3, 0, -5, -3, 0, 5, -2, 0, -5, -2, 0, 5, -1, 0, -5, -1, 0, 5, 1, 0, -5, 1, 0, 5, 2, 0, -5, 2, 0, 5, 3, 0, -5, 3, 0, 5, 4, 0, -5, 4, 0, 5, -5, 0, -4, 5, 0, -4, -5, 0, -3, 5, 0, -3, -5, 0, -2, 5, 0, -2, -5, 0, -1, 5, 0, -1, -5, 0, 1, 5, 0, 1, -5, 0, 2, 5, 0, 2, -5, 0, 3, 5, 0, 3, -5, 0, 4, 5, 0, 4 ]
                                }
                              }
                            }
                          }
                        }
                      },
                      { "Shape":
                        {
                          "@DEF": "MajorPoints",
                          "-appearance": { "Appearance":
                            {
                              "-pointProperties": { "PointProperties":
                                {
                                  "@pointSizeScaleFactor": 6,
                                  "@pointSizeMaxValue": 6
                                }
                              },
                              "-material": { "Material":
                                {
                                  "@USE": "MajorMaterial"
                                }
                              }
                            }
                          },
                          "-geometry": { "PointSet":
                            {
                              "@DEF": "MajorPoints_1",
                              "-coord": { "Coordinate":
                                {
                                  "@point": [ 0, -5, 0, 0, 0, 0, 0, 5, 0 ]
                                }
                              }
                            }
                          }
                        }
                      },
                      { "Shape":
                        {
                          "@DEF": "MinorPoints",
                          "-appearance": { "Appearance":
                            {
                              "-pointProperties": { "PointProperties":
                                {
                                  "@pointSizeScaleFactor": 4,
                                  "@pointSizeMaxValue": 4
                                }
                              },
                              "-material": { "Material":
                                {
                                  "@USE": "MinorMaterial"
                                }
                              }
                            }
                          },
                          "-geometry": { "PointSet":
                            {
                              "@DEF": "MinorPoints_1",
                              "-coord": { "Coordinate":
                                {
                                  "@point": [ 0, -4, 0, 0, -3, 0, 0, -2, 0, 0, -1, 0, 0, 1, 0, 0, 2, 0, 0, 3, 0, 0, 4, 0 ]
                                }
                              }
                            }
                          }
                        }
                      }
                    ],
                    "IS": {
                      "connect": [
                        {
                          "@nodeField": "translation",
                          "@protoField": "translation"
                        },
                        {
                          "@nodeField": "rotation",
                          "@protoField": "rotation"
                        },
                        {
                          "@nodeField": "scale",
                          "@protoField": "scale"
                        }
                      ]
                    }
                  }
                },
                { "Script":
                  {
                    "@DEF": "GridScript",
                    "@directOutput": true,
                    "@mustEvaluate": true,
                    "field": [
                      {
                        "@accessType": "inputOutput",
                        "@type": "MFInt32",
                        "@name": "dimension"
                      },
                      {
                        "@accessType": "inputOutput",
                        "@type": "MFInt32",
                        "@name": "majorLineEvery"
                      },
                      {
                        "@accessType": "inputOutput",
                        "@type": "MFInt32",
                        "@name": "majorLineOffset"
                      },
                      {
                        "@accessType": "initializeOnly",
                        "@type": "SFNode",
                        "@name": "plane",
                        "-children": [
                          { "Transform":
                            {
                              "@USE": "Plane"
                            }
                          }
                        ]
                      },
                      {
                        "@accessType": "initializeOnly",
                        "@type": "SFNode",
                        "@name": "majorGrid",
                        "-children": [
                          { "IndexedLineSet":
                            {
                              "@USE": "MajorGrid_1"
                            }
                          }
                        ]
                      },
                      {
                        "@accessType": "initializeOnly",
                        "@type": "SFNode",
                        "@name": "minorGrid",
                        "-children": [
                          { "IndexedLineSet":
                            {
                              "@USE": "MinorGrid_1"
                            }
                          }
                        ]
                      },
                      {
                        "@accessType": "initializeOnly",
                        "@type": "SFNode",
                        "@name": "majorPoints",
                        "-children": [
                          { "PointSet":
                            {
                              "@USE": "MajorPoints_1"
                            }
                          }
                        ]
                      },
                      {
                        "@accessType": "initializeOnly",
                        "@type": "SFNode",
                        "@name": "minorPoints",
                        "-children": [
                          { "PointSet":
                            {
                              "@USE": "MinorPoints_1"
                            }
                          }
                        ]
                      }
                    ],
                    "#sourceText": [
"javascript:",
"",
"function initialize ()",
"{",
"\teventsProcessed ();",
"}",
"",
"function eventsProcessed ()",
"{",
"\t// Plane",
"",
"\tplane .scale = new SFVec3f (dimension [0], dimension [2], 1);",
"",
"\t// Grid",
"",
"\tgenerateGrid (true, majorGrid);",
"\tgenerateGrid (false, minorGrid);",
"",
"\t// Points",
"",
"\tgeneratePoints (true,  majorPoints .coord .point);",
"\tgeneratePoints (false, minorPoints .coord .point);",
"}",
"",
"function generateGrid (major, grid)",
"{",
"\tvar point       = grid .coord .point;",
"\tvar coordIndex  = new MFInt32 ();",
"\tvar scaleX1_2   = dimension [0] / 2;",
"\tvar scaleZ1_2   = dimension [2] / 2;",
"\tvar majorAdd    = major / 4;",
"\tvar p           = 0;",
"",
"\tfor (var i = 0, size = dimension [0] + 1; i < size; ++ i)",
"\t{",
"\t\tif (major - isMajorLine (i, 0))",
"\t\t\tcontinue;",
"",
"\t\tvar x = -scaleX1_2 + i;",
"",
"\t\tpoint [p]     = new SFVec3f (x, 0, -scaleZ1_2 - majorAdd);",
"\t\tpoint [p + 1] = new SFVec3f (x, 0,  scaleZ1_2 + majorAdd);",
"\t\tcoordIndex [coordIndex .length] = p;",
"\t\tcoordIndex [coordIndex .length] = p + 1;",
"\t\tcoordIndex [coordIndex .length] = -1;",
"\t\t\t",
"\t\tp += 2;",
"\t}",
"",
"\tfor (var i = 0, size = dimension [2] + 1; i < size; ++ i)",
"\t{",
"\t\tif (major - isMajorLine (i, 2))",
"\t\t\tcontinue;",
"",
"\t\tvar z = -scaleZ1_2 + i;",
"",
"\t\tpoint [p]     = new SFVec3f (-scaleX1_2 - majorAdd, 0, z);",
"\t\tpoint [p + 1] = new SFVec3f ( scaleX1_2 + majorAdd, 0, z);",
"\t\tcoordIndex [coordIndex .length] = p;",
"\t\tcoordIndex [coordIndex .length] = p + 1;",
"\t\tcoordIndex [coordIndex .length] = -1;",
"\t\t",
"\t\tp += 2;",
"\t}",
"",
"\tpoint .length = p;",
"",
"\tgrid .set_coordIndex = coordIndex;",
"}",
"",
"function generatePoints (major, point)",
"{",
"\tvar scaleY1_2 = -dimension [1] / 2;",
"\tvar p         = 0;",
"",
"\tfor (var i = 0, size = dimension [1] + 1; i < size; ++ i)",
"\t{",
"\t\tif (major - isMajorLine (i, 1))",
"\t\t\tcontinue;",
"",
"\t\tpoint [p] = new SFVec3f (0, scaleY1_2 + i, 0);",
"\t\t++ p;",
"\t}",
"",
"\tpoint .length = p;",
"}",
"",
"function isMajorLine (i, index)",
"{",
"\tfor (var d = index; d < majorLineEvery .length; d += 3)",
"\t{",
"\t\tif (isMajor (i, dimension [index], majorLineEvery [d], majorLineOffset [d]))",
"\t\t\treturn true;",
"\t}",
"",
"\treturn false;",
"}",
"",
"function isMajor (i, dimension, majorLineEvery, majorLineOffset)",
"{",
"\tif (majorLineEvery)",
"\t{",
"\t\tvar index = Math .floor (i - dimension / 2 - majorLineOffset);",
"",
"\t\treturn !(index % majorLineEvery);",
"\t}",
"",
"\treturn false;",
"}",
""
                    ],
                    "IS": {
                      "connect": [
                        {
                          "@nodeField": "dimension",
                          "@protoField": "dimension"
                        },
                        {
                          "@nodeField": "majorLineEvery",
                          "@protoField": "majorLineEvery"
                        },
                        {
                          "@nodeField": "majorLineOffset",
                          "@protoField": "majorLineOffset"
                        }
                      ]
                    }
                  }
                }
              ]
            }
          }
        },
        { "WorldInfo":
          {
          }
        },
        { "Viewpoint":
          {
            "@description": "Home",
            "@position": [ 20.8877, 22.923, 30.0087 ],
            "@orientation": [ -0.669331169782766, 0.718448014221236, 0.189283480575554, 0.817475942569067 ]
          }
        },
        { "ProtoInstance":
          {
            "@name": "Grid",
            "fieldValue": [
              {
                "@name": "scale",
                "@value": [ 0.5, 0.5, 0.5 ]
              },
              {
                "@name": "dimension",
                "@value": [ 50, 10, 50 ]
              },
              {
                "@name": "transparency",
                "@value": 0.8
              }
            ]
          }
        },
        { "Transform":
          {
            "-children": [
              { "Inline":
                {
                  "@DEF": "Boxes",
                  "@global": true,
                  "@url": [ "boxes.x3d" ]
                }
              },
              { "ClipPlane":
                {
                  "@DEF": "_1",
                  "@plane": [ -1, 0, 0, 5.75581 ]
                }
              },
              { "ClipPlane":
                {
                  "@DEF": "_2",
                  "@plane": [ 1, 0, 0, 5.75581 ]
                }
              },
              { "ClipPlane":
                {
                  "@DEF": "_3",
                  "@plane": [ 0, 0, 1, 5.75581 ]
                }
              },
              { "ClipPlane":
                {
                  "@DEF": "_4",
                  "@plane": [ 0, 0, -1, 5.75581 ]
                }
              },
              { "ClipPlane":
                {
                  "@DEF": "_5",
                  "@plane": [ 0, 1, 0, 5.75581 ]
                }
              },
              { "ClipPlane":
                {
                  "@DEF": "_6",
                  "@plane": [ 0, -1, 0, 5.75581 ]
                }
              },
              { "Script":
                {
                  "@DEF": "ClipPlanesScript",
                  "@directOutput": true,
                  "field": [
                    {
                      "@accessType": "inputOutput",
                      "@type": "SFFloat",
                      "@name": "distanceFromOrigin",
                      "@value": 5.75581
                    },
                    {
                      "@accessType": "inputOutput",
                      "@type": "MFNode",
                      "@name": "planes",
                      "-children": [
                        { "ClipPlane":
                          {
                            "@USE": "_1"
                          }
                        },
                        { "ClipPlane":
                          {
                            "@USE": "_2"
                          }
                        },
                        { "ClipPlane":
                          {
                            "@USE": "_3"
                          }
                        },
                        { "ClipPlane":
                          {
                            "@USE": "_4"
                          }
                        },
                        { "ClipPlane":
                          {
                            "@USE": "_5"
                          }
                        },
                        { "ClipPlane":
                          {
                            "@USE": "_6"
                          }
                        }
                      ]
                    }
                  ],
                  "#sourceText": [
"ecmascript:",
"",
"function set_distanceFromOrigin (value)",
"{",
"\tfor (var i = 0; i < planes .length; ++ i)",
"\t{",
"\t\tplanes [i] .plane .w = value;",
"\t}",
"}"
                  ]
                }
              }
            ]
          }
        },
        { "IMPORT":
          {
            "@inlineDEF": "Boxes",
            "@importedDEF": "ClipPlanesScriptDistanceFromOriginInterpolator"
          }
        },
        { "ROUTE":
          {
            "@fromNode": "ClipPlanesScriptDistanceFromOriginInterpolator",
            "@fromField": "value_changed",
            "@toNode": "ClipPlanesScript",
            "@toField": "distanceFromOrigin"
          }
        }
      ]
    }
  }
}
