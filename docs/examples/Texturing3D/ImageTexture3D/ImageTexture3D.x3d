<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE X3D PUBLIC "ISO//Web3D//DTD X3D 4.0//EN" "http://www.web3d.org/specifications/x3d-4.0.dtd">
<X3D profile='Interchange' version='4.0' xmlns:xsd='http://www.w3.org/2001/XMLSchema-instance' xsd:noNamespaceSchemaLocation='http://www.web3d.org/specifications/x3d-4.0.xsd'>
  <head>
    <component name='CADGeometry' level='2'/>
    <component name='EnvironmentalSensor' level='3'/>
    <component name='Geometry2D' level='2'/>
    <component name='PointingDeviceSensor' level='1'/>
    <component name='Scripting' level='1'/>
    <component name='Shaders' level='1'/>
    <component name='Texturing3D' level='2'/>
    <meta name='comment' content='World of Sunrise X3D Editor'/>
    <meta name='created' content='Sun, 27 Oct 2019 05:58:52 GMT'/>
    <meta name='creator' content='Holger Seelig'/>
    <meta name='generator' content='Sunrise X3D Editor V1.0.4, https://create3000.github.io/sunrise/'/>
    <meta name='identifier' content='file:///Users/holger/Desktop/X_ITE/media/docs/examples/Texturing3D/ImageTexture3D/ImageTexture3D.O.x3d'/>
    <meta name='modified' content='Wed, 09 Nov 2022 21:17:04 GMT'/>
    <meta name='converter' content='x3d-tidy V1.0.8, https://github.com/create3000/x3d-tidy#readme'/>
    <meta name='converted' content='Sat, 21 Jan 2023 03:29:50 GMT'/>
  </head>
  <Scene>
    <ProtoDeclare name='Volume'>
      <ProtoInterface>
        <field accessType='inputOutput' type='SFVec3f' name='dimensions' value='1 1 1'/>
        <field accessType='inputOutput' type='SFNode' name='voxels'/>
      </ProtoInterface>
      <ProtoBody>
        <Group>
          <ProximitySensor DEF='_1'
              size='-1 -1 -1'/>
          <Transform DEF='_2'>
            <Shape>
              <Appearance>
                <IS>
                  <connect nodeField='texture' protoField='voxels'/>
                </IS>
                <TextureTransform3D DEF='_3'
                    translation='0.5 0.5 0.5'
                    center='-0.5 -0.5 -0.5'/>
                <ComposedShader DEF='ComposedShader'
                    language='GLSL'>
                  <ShaderPart DEF='VertexShader'>
<![CDATA[data:x-shader/x-vertex,#version 300 es

precision mediump float;

uniform mat4 x3d_ProjectionMatrix;
uniform mat4 x3d_ModelViewMatrix;
uniform mat4 x3d_TextureMatrix [1];

in vec4 x3d_Vertex;
in vec4 x3d_TexCoord0;

out vec3 vertex;
out vec4 texCoord;

void
main ()
{
	vec4 position = x3d_ModelViewMatrix * x3d_Vertex;

	vertex   = position .xyz;
	texCoord = x3d_TextureMatrix [0] * x3d_TexCoord0;

	gl_Position = x3d_ProjectionMatrix * position;
}]]>
                  </ShaderPart>
                  <ShaderPart DEF='FragmentShader'
                      type='FRAGMENT'>
<![CDATA[data:x-shader/x-fragment,#version 300 es

precision mediump float;
precision mediump sampler3D;

uniform sampler3D x3d_Texture3D [1];
uniform vec4 x3d_ClipPlane [1];

in vec3 vertex;
in vec4 texCoord;

out vec4 x3d_FragColor;

#define NUM_CLIP_PLANES 1

void
clip ()
{
	for (int i = 0; i < NUM_CLIP_PLANES; ++ i)
	{
		if (dot (vertex, x3d_ClipPlane [i] .xyz) - x3d_ClipPlane [i] .w < 0.0)
			discard;
	}
}

vec4
getTextureColor (in vec3 texCoord)
{
	if (texCoord .s < 0.0 || texCoord .s > 1.0)
		discard;

	if (texCoord .t < 0.0 || texCoord .t > 1.0)
		discard;

	if (texCoord .p < 0.0 || texCoord .p > 1.0)
		discard;

	vec4 voxelColor = texture (x3d_Texture3D [0], texCoord);
	
	return voxelColor;
}

void
main ()
{
	clip ();

	x3d_FragColor = getTextureColor (texCoord .stp / texCoord .q);
}]]>
                  </ShaderPart>
                </ComposedShader>
              </Appearance>
              <QuadSet DEF='_4'>
                <TextureCoordinate3D/>
                <Coordinate/>
              </QuadSet>
            </Shape>
          </Transform>
        </Group>
        <Script DEF='VolumeScript'>
          <field accessType='inputOutput' type='SFVec3f' name='dimensions'/>
          <field accessType='initializeOnly' type='SFNode' name='textureTransform'>
            <TextureTransform3D USE='_3'/>
          </field>
          <field accessType='initializeOnly' type='SFNode' name='geometry'>
            <QuadSet USE='_4'/>
          </field>
          <IS>
            <connect nodeField='dimensions' protoField='dimensions'/>
          </IS>
<![CDATA[vrmlscript:

var NUM_PLANES = 200;

function initialize ()
{
	set_dimension ();
}

function set_dimension ()
{
	var
		size     = dimensions .length (),
		size1_2  = size / 2,
		coord    = geometry .coord,
		texCoord = geometry .texCoord;
	
	coord .point .length = 0;

	for (var i = 0; i < NUM_PLANES; ++ i)
	{
		var z = i / (NUM_PLANES - 1) - 0.5;

		coord .point .push (new SFVec3f ( size1_2,  size1_2, size * z),
		                    new SFVec3f (-size1_2,  size1_2, size * z),
		                    new SFVec3f (-size1_2, -size1_2, size * z),
		                    new SFVec3f ( size1_2, -size1_2, size * z));
	}

	texCoord .point = coord .point;
	
	textureTransform .scale = new SFVec3f (1 / dimensions .x, 1 / dimensions .y, 1 / dimensions .z);
}
]]>
        </Script>
        <ROUTE fromNode='_1' fromField='orientation_changed' toNode='_2' toField='set_rotation'/>
        <ROUTE fromNode='_1' fromField='orientation_changed' toNode='_3' toField='set_rotation'/>
      </ProtoBody>
    </ProtoDeclare>
    <WorldInfo
        title='DCM1'/>
    <Background DEF='Gray'
        skyColor='0.2 0.2 0.2'/>
    <Viewpoint
        description='Scan'
        position='0.83541 0.877791 1.8987'
        orientation='-0.64975770662982 0.74313547213655 0.15988931398796 0.63953452290137'
        centerOfRotation='0.158101 0.219243 0.605812'/>
    <Transform DEF='Volume_1'>
      <ProtoInstance name='Volume' DEF='Volume'>
        <fieldValue name='voxels'>
          <ImageTexture3D DEF='_5' containerField='voxels'
              url='"datasets/dicom/IM00001.implicit_little_endian.dcm"'/>
        </fieldValue>
      </ProtoInstance>
      <ClipPlane DEF='_6'
          plane='0 0 -1 0.643118'/>
    </Transform>
    <Transform DEF='VisibleClipPlane'>
      <PlaneSensor DEF='PlaneSensor'
          axisRotation='0 1 0 1.5708'
          offset='0.00000233535 0 0.643118'
          maxPosition='-1 0'/>
      <Transform DEF='Rectangle2D'
          translation='0.00000233535 0 0.643118'
          scale='0.5 0.5 1'>
        <Shape>
          <Appearance>
            <LineProperties DEF='_7'
                linewidthScaleFactor='2'/>
            <Material
                transparency='1'/>
          </Appearance>
          <Rectangle2D/>
        </Shape>
        <Shape>
          <Appearance>
            <LineProperties USE='_7'/>
            <Material/>
          </Appearance>
          <IndexedLineSet
              coordIndex='0, 1, 2, 3, 0'>
            <Coordinate
                point='-1 -1 0, 1 -1 0, 1 1 0, -1 1 0'/>
          </IndexedLineSet>
        </Shape>
      </Transform>
      <Script DEF='ClipPlaneScript'>
        <field accessType='inputOnly' type='SFVec3f' name='set_translation'/>
        <field accessType='outputOnly' type='SFVec4f' name='plane_changed'/>
<![CDATA[vrmlscript:
function set_translation (value)
{
	var distanceFromOrigin = new SFVec3f (0, 0, -1) .dot (value);

	plane_changed = new SFVec4f (0,0,-1, -distanceFromOrigin);
}
]]>
      </Script>
    </Transform>
    <ROUTE fromNode='PlaneSensor' fromField='translation_changed' toNode='Rectangle2D' toField='set_translation'/>
    <ROUTE fromNode='PlaneSensor' fromField='translation_changed' toNode='ClipPlaneScript' toField='set_translation'/>
    <ROUTE fromNode='ClipPlaneScript' fromField='plane_changed' toNode='_6' toField='set_plane'/>
  </Scene>
</X3D>
