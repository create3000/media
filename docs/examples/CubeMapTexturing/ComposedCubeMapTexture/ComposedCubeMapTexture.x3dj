{ "X3D": {
    "encoding": "UTF-8",
    "@profile": "Immersive",
    "@version": "3.3",
    "@xsd:noNamespaceSchemaLocation": "http://www.web3d.org/specifications/x3d-3.3.xsd",
    "JSON schema": "http://www.web3d.org/specifications/x3d-3.3-JSONSchema.json",
    "head": {
      "meta": [
        {
          "@name": "comment",
          "@content": "World of Titania"
        },
        {
          "@name": "created",
          "@content": "Sat, 30 Apr 2016 02:18:39 GMT"
        },
        {
          "@name": "creator",
          "@content": "holger"
        },
        {
          "@name": "generator",
          "@content": "Titania V4.3.11, http://titania.create3000.de"
        },
        {
          "@name": "identifier",
          "@content": "file:///home/holger/Projekte/Sunrise/src/drive/user/test/components/CubeMapTexturing/ComposedCubeMapTexture/ComposedCubeMapTexture.O.x3d"
        },
        {
          "@name": "modified",
          "@content": "Sun, 27 Jan 2019 15:59:48 GMT"
        },
        {
          "@name": "titania-add-metadata",
          "@content": "true"
        }
      ],
      "component": [
        {
          "@name": "CubeMapTexturing",
          "@level": 1
        },
        {
          "@name": "EnvironmentalEffects",
          "@level": 3
        },
        {
          "@name": "Grouping",
          "@level": 3
        },
        {
          "@name": "Shaders",
          "@level": 1
        },
        {
          "@name": "Shape",
          "@level": 4
        },
        {
          "@name": "Time",
          "@level": 2
        }
      ]
    },
    "Scene": {
      "-children": [
        { "ExternProtoDeclare":
          {
            "@name":"Dolphin",
            "@url": [ "assets/Dolphin.x3d#Dolphin" ]
          }
        },
        { "ProtoDeclare":
          {
            "@name":"FresnelShader",
            "ProtoInterface": {
              "field": [
                {
                  "@accessType": "inputOutput",
                  "@type": "SFFloat",
                  "@name": "refraction",
                  "@value": 1
                },
                {
                  "@accessType": "inputOutput",
                  "@type": "SFFloat",
                  "@name": "reflection",
                  "@value": 0.1
                },
                {
                  "@accessType": "inputOutput",
                  "@type": "SFNode",
                  "@name": "cubeMapTexture"
                }
              ]
            },
            "ProtoBody": {
              "-children": [
                { "ComposedShader":
                  {
                    "@DEF": "FresnelShader",
                    "@language": "GLSL",
                    "-parts": [
                      { "ShaderPart":
                        {
                          "@DEF": "VertexShader",
                          "@url": [ "data:x-shader/x-vertex,\n\nprecision mediump float;\nprecision mediump int;\n\nuniform float refraction;\nuniform float reflection;\n\nuniform bool  x3d_Lighting;  // true if a X3DMaterialNode is attached, otherwise false\n\nuniform mat4 x3d_CameraSpaceMatrix;\nuniform mat4 x3d_ProjectionMatrix;\nuniform mat4 x3d_ModelViewMatrix;\nuniform mat3 x3d_NormalMatrix;\n\nattribute vec3 x3d_Normal;\nattribute vec4 x3d_Vertex;\n\nvarying vec3 v;  // point on geometry\nvarying vec3 vN; // normalized normal vector at this point on geometry\nvarying vec3 vReflect;\nvarying vec3 vRefract[3];\nvarying float vReflectionFactor;\n\nvoid\nmain ()\n{\n\tmat4 modelMatrix   = x3d_CameraSpaceMatrix * x3d_ModelViewMatrix;\n\tvec4 position      = x3d_ModelViewMatrix * x3d_Vertex;\n\tvec4 worldPosition = modelMatrix * x3d_Vertex;\n\tvec3 worldNormal   = normalize (mat3 (modelMatrix [0] .xyz, modelMatrix [1] .xyz, modelMatrix [2] .xyz) * x3d_Normal);\n\tvec3 I             = normalize (worldPosition .xyz - x3d_CameraSpaceMatrix [3] .xyz);\n\n\tvReflect           = reflect (I, worldNormal);\n\tvRefract [0]       = refract (I, worldNormal, refraction);\n\tvRefract [1]       = refract (I, worldNormal, refraction * 0.99);\n\tvRefract [2]       = refract (I, worldNormal, refraction * 0.98);\n\tvReflectionFactor  = pow (1.0 + dot (I, worldNormal), 1.0 - reflection);\n\t\n\tif (x3d_Lighting)\n\t\tvN = normalize (x3d_NormalMatrix * x3d_Normal);\n\t\t\n\tv = position .xyz;\n\n\tgl_Position = x3d_ProjectionMatrix * position;\n}\n\n" ]
                        }
                      },
                      { "ShaderPart":
                        {
                          "@DEF": "FragmentShader",
                          "@type": "FRAGMENT",
                          "@url": [ "data:x-shader/x-fragment,\n\nprecision mediump float;\nprecision mediump int;\n\nuniform bool x3d_Lighting; // true if a X3DMaterialNode is attached, otherwise false\nuniform int x3d_NumLights;\nuniform x3d_LightSourceParameters x3d_LightSource [x3d_MaxLights];\nuniform bool x3d_SeparateBackColor;\nuniform x3d_MaterialParameters x3d_FrontMaterial;\nuniform x3d_MaterialParameters x3d_BackMaterial;\n\nuniform samplerCube cubMapTexture;\n\nvarying vec3 v;  // point on geometry\nvarying vec3 vN; // normalized normal vector at this point on geometry\nvarying vec3 vReflect;\nvarying vec3 vRefract [3];\nvarying float vReflectionFactor;\n\nvec4\ngetTextureColor ()\n{\n\tvec4 reflectedColor = textureCube (cubMapTexture, vec3 (vReflect .xy, -vReflect .z));\n\tvec4 refractedColor = vec4 (1.0);\n\n\trefractedColor .r = textureCube (cubMapTexture, vec3 (vRefract [0] .xy, -vRefract [0] .z)) .r;\n\trefractedColor .g = textureCube (cubMapTexture, vec3 (vRefract [1] .xy, -vRefract [1] .z)) .g;\n\trefractedColor .b = textureCube (cubMapTexture, vec3 (vRefract [2] .xy, -vRefract [2] .z)) .b;\n\n\treturn mix (refractedColor, reflectedColor, clamp (vReflectionFactor, 0.0, 1.0));\n}\n\nfloat\ngetSpotFactor (in float cutOffAngle, in float beamWidth, in vec3 L, in vec3 d)\n{\n\tfloat spotAngle = acos (clamp (dot (-L, d), -1.0, 1.0));\n\t\n\tif (spotAngle >= cutOffAngle)\n\t\treturn 0.0;\n\telse if (spotAngle <= beamWidth)\n\t\treturn 1.0;\n\n\treturn (spotAngle - cutOffAngle) / (beamWidth - cutOffAngle);\n}\n\nvec4\ngetMaterialColor (in x3d_MaterialParameters material)\n{\n\tvec4 textureColor = getTextureColor ();\n\t\n\tif (x3d_Lighting)\n\t{\n\t\tvec3  N  = normalize (gl_FrontFacing ? vN : -vN);\n\t\tvec3  V  = normalize (-v); // normalized vector from point on geometry to viewer's position\n\t\tfloat dV = length (v);\n\n\t\t// Calculate diffuseFactor & alpha\n\t\t\n\t\tfloat alpha = 1.0 - material .transparency;\n\n\t\talpha *= textureColor .a;\n\n\t\t// Apply light sources\n\n\t\tvec3 finalColor = textureColor .rgb;\n\n\t\tfor (int i = 0; i < x3d_MaxLights; ++ i)\n\t\t{\n\t\t\tif (i == x3d_NumLights)\n\t\t\t\tbreak;\n\n\t\t\tx3d_LightSourceParameters light = x3d_LightSource [i];\n\n\t\t\tvec3  vL = light .location - v;\n\t\t\tfloat dL = length (vL);\n\t\t\tbool  di = light .type == x3d_DirectionalLight;\n\n\t\t\tif (di || dL <= light .radius)\n\t\t\t{\n\t\t\t\tvec3 d = light .direction;\n\t\t\t\tvec3 c = light .attenuation;\n\t\t\t\tvec3 L = di ? -d : normalize (vL);      // Normalized vector from point on geometry to light source i position.\n\t\t\t\tvec3 H = normalize (L + V);             // Specular term\n\n\t\t\t\tfloat lightAngle            = dot (N, L);      // Angle between normal and light ray.\n\t\t\t\tfloat specularFactor        = material .shininess > 0.0 ? pow (max (dot (N, H), 0.0), material .shininess * 128.0) : 1.0;\n\t\t\t\tfloat attenuationFactor     = di ? 1.0 : 1.0 / max (c [0] + c [1] * dL + c [2] * (dL * dL), 1.0);\n\t\t\t\tfloat spotFactor            = light .type == x3d_SpotLight ? getSpotFactor (light .cutOffAngle, light .beamWidth, L, d) : 1.0;\n\t\t\t\tfloat attenuationSpotFactor = attenuationFactor * spotFactor;\n\t\t\t\tvec3  specularTerm          = material .specularColor * specularFactor;\n\n\t\t\t\tfinalColor += attenuationSpotFactor * light .color * light .intensity * specularTerm;\n\t\t\t}\n\t\t}\n\n\t\treturn vec4 (finalColor, alpha);\n\t}\n\telse\n\t{\n\t\treturn textureColor;\n\t}\n}\n\nvoid\nmain ()\n{\n\tbool frontColor = gl_FrontFacing || ! x3d_SeparateBackColor;\n\n\tgl_FragColor = frontColor ? getMaterialColor (x3d_FrontMaterial) : getMaterialColor (x3d_BackMaterial);\n}\n" ]
                        }
                      }
                    ],
                    "field": [
                      {
                        "@accessType": "inputOutput",
                        "@type": "SFFloat",
                        "@name": "refraction"
                      },
                      {
                        "@accessType": "inputOutput",
                        "@type": "SFFloat",
                        "@name": "reflection"
                      },
                      {
                        "@accessType": "inputOutput",
                        "@type": "SFNode",
                        "@name": "cubMapTexture"
                      }
                    ],
                    "IS": {
                      "connect": [
                        {
                          "@nodeField": "refraction",
                          "@protoField": "refraction"
                        },
                        {
                          "@nodeField": "reflection",
                          "@protoField": "reflection"
                        },
                        {
                          "@nodeField": "cubMapTexture",
                          "@protoField": "cubeMapTexture"
                        }
                      ]
                    }
                  }
                }
              ]
            }
          }
        },
        { "WorldInfo":
          {
          }
        },
        { "TextureBackground":
          {
            "@DEF": "WideOcean",
            "-frontTexture": { "ImageTexture":
              {
                "@DEF": "_1",
                "@url": [ "assets/WideOcean/WideOcean-front.jpg" ],
                "-textureProperties": { "TextureProperties":
                  {
                    "@DEF": "_2",
                    "@minificationFilter": "DEFAULT",
                    "@magnificationFilter": "DEFAULT",
                    "@boundaryModeS": "CLAMP_TO_EDGE",
                    "@boundaryModeT": "CLAMP_TO_EDGE",
                    "@boundaryModeR": "CLAMP_TO_EDGE",
                    "@textureCompression": "DEFAULT"
                  }
                }
              }
            },
            "-backTexture": { "ImageTexture":
              {
                "@DEF": "_3",
                "@url": [ "assets/WideOcean/WideOcean-back.jpg" ],
                "-textureProperties": { "TextureProperties":
                  {
                    "@USE": "_2"
                  }
                }
              }
            },
            "-leftTexture": { "ImageTexture":
              {
                "@DEF": "_4",
                "@url": [ "assets/WideOcean/WideOcean-left.jpg" ],
                "-textureProperties": { "TextureProperties":
                  {
                    "@USE": "_2"
                  }
                }
              }
            },
            "-rightTexture": { "ImageTexture":
              {
                "@DEF": "_5",
                "@url": [ "assets/WideOcean/WideOcean-right.jpg" ],
                "-textureProperties": { "TextureProperties":
                  {
                    "@USE": "_2"
                  }
                }
              }
            },
            "-topTexture": { "ImageTexture":
              {
                "@DEF": "_6",
                "@url": [ "assets/WideOcean/WideOcean-top.jpg" ],
                "-textureProperties": { "TextureProperties":
                  {
                    "@USE": "_2"
                  }
                }
              }
            },
            "-bottomTexture": { "ImageTexture":
              {
                "@DEF": "_7",
                "@url": [ "assets/WideOcean/WideOcean-bottom.jpg" ],
                "-textureProperties": { "TextureProperties":
                  {
                    "@USE": "_2"
                  }
                }
              }
            }
          }
        },
        { "Transform":
          {
            "@DEF": "_8",
            "@rotation": [ 0, -1, 0, 2.16262637828138 ],
            "-children": [
              { "Group":
                {
                  "@DEF": "Animation",
                  "-children": [
                    { "TimeSensor":
                      {
                        "@DEF": "AnimationTimer",
                        "@cycleInterval": 40,
                        "@loop": true,
                        "@startTime": 1512609903.02717,
                        "@stopTime": 1512609903.02717
                      }
                    },
                    { "OrientationInterpolator":
                      {
                        "@DEF": "RotationInterpolator",
                        "@key": [ 0, 0.0025, 0.005, 0.0075, 0.01, 0.0125, 0.015, 0.0175, 0.02, 0.0225, 0.025, 0.0275, 0.03, 0.0325, 0.035, 0.0375, 0.04, 0.0425, 0.045, 0.0475, 0.05, 0.0525, 0.055, 0.0575, 0.06, 0.0625, 0.065, 0.0675, 0.07, 0.0725, 0.075, 0.0775, 0.08, 0.0825, 0.085, 0.0875, 0.09, 0.0925, 0.095, 0.0975, 0.1, 0.1025, 0.105, 0.1075, 0.11, 0.1125, 0.115, 0.1175, 0.12, 0.1225, 0.125, 0.1275, 0.13, 0.1325, 0.135, 0.1375, 0.14, 0.1425, 0.145, 0.1475, 0.15, 0.1525, 0.155, 0.1575, 0.16, 0.1625, 0.165, 0.1675, 0.17, 0.1725, 0.175, 0.1775, 0.18, 0.1825, 0.185, 0.1875, 0.19, 0.1925, 0.195, 0.1975, 0.2, 0.2025, 0.205, 0.2075, 0.21, 0.2125, 0.215, 0.2175, 0.22, 0.2225, 0.225, 0.2275, 0.23, 0.2325, 0.235, 0.2375, 0.24, 0.2425, 0.245, 0.2475, 0.25, 0.2525, 0.255, 0.2575, 0.26, 0.2625, 0.265, 0.2675, 0.27, 0.2725, 0.275, 0.2775, 0.28, 0.2825, 0.285, 0.2875, 0.29, 0.2925, 0.295, 0.2975, 0.3, 0.3025, 0.305, 0.3075, 0.31, 0.3125, 0.315, 0.3175, 0.32, 0.3225, 0.325, 0.3275, 0.33, 0.3325, 0.335, 0.3375, 0.34, 0.3425, 0.345, 0.3475, 0.35, 0.3525, 0.355, 0.3575, 0.36, 0.3625, 0.365, 0.3675, 0.37, 0.3725, 0.375, 0.3775, 0.38, 0.3825, 0.385, 0.3875, 0.39, 0.3925, 0.395, 0.3975, 0.4, 0.4025, 0.405, 0.4075, 0.41, 0.4125, 0.415, 0.4175, 0.42, 0.4225, 0.425, 0.4275, 0.43, 0.4325, 0.435, 0.4375, 0.44, 0.4425, 0.445, 0.4475, 0.45, 0.4525, 0.455, 0.4575, 0.46, 0.4625, 0.465, 0.4675, 0.47, 0.4725, 0.475, 0.4775, 0.48, 0.4825, 0.485, 0.4875, 0.49, 0.4925, 0.495, 0.4975, 0.5, 0.5025, 0.505, 0.5075, 0.51, 0.5125, 0.515, 0.5175, 0.52, 0.5225, 0.525, 0.5275, 0.53, 0.5325, 0.535, 0.5375, 0.54, 0.5425, 0.545, 0.5475, 0.55, 0.5525, 0.555, 0.5575, 0.56, 0.5625, 0.565, 0.5675, 0.57, 0.5725, 0.575, 0.5775, 0.58, 0.5825, 0.585, 0.5875, 0.59, 0.5925, 0.595, 0.5975, 0.6, 0.6025, 0.605, 0.6075, 0.61, 0.6125, 0.615, 0.6175, 0.62, 0.6225, 0.625, 0.6275, 0.63, 0.6325, 0.635, 0.6375, 0.64, 0.6425, 0.645, 0.6475, 0.65, 0.6525, 0.655, 0.6575, 0.66, 0.6625, 0.665, 0.6675, 0.67, 0.6725, 0.675, 0.6775, 0.68, 0.6825, 0.685, 0.6875, 0.69, 0.6925, 0.695, 0.6975, 0.7, 0.7025, 0.705, 0.7075, 0.71, 0.7125, 0.715, 0.7175, 0.72, 0.7225, 0.725, 0.7275, 0.73, 0.7325, 0.735, 0.7375, 0.74, 0.7425, 0.745, 0.7475, 0.75, 0.7525, 0.755, 0.7575, 0.76, 0.7625, 0.765, 0.7675, 0.77, 0.7725, 0.775, 0.7775, 0.78, 0.7825, 0.785, 0.7875, 0.79, 0.7925, 0.795, 0.7975, 0.8, 0.8025, 0.805, 0.8075, 0.81, 0.8125, 0.815, 0.8175, 0.82, 0.8225, 0.825, 0.8275, 0.83, 0.8325, 0.835, 0.8375, 0.84, 0.8425, 0.845, 0.8475, 0.85, 0.8525, 0.855, 0.8575, 0.86, 0.8625, 0.865, 0.8675, 0.87, 0.8725, 0.875, 0.8775, 0.88, 0.8825, 0.885, 0.8875, 0.89, 0.8925, 0.895, 0.8975, 0.9, 0.9025, 0.905, 0.9075, 0.91, 0.9125, 0.915, 0.9175, 0.92, 0.9225, 0.925, 0.9275, 0.93, 0.9325, 0.935, 0.9375, 0.94, 0.9425, 0.945, 0.9475, 0.95, 0.9525, 0.955, 0.9575, 0.96, 0.9625, 0.965, 0.9675, 0.97, 0.9725, 0.975, 0.9775, 0.98, 0.9825, 0.985, 0.9875, 0.99, 0.9925, 0.995, 0.9975, 1 ],
                        "@keyValue": [ 0, 0, 1, 0, 0, -1, 0, 0.0157079638580239, 0, -1, 0, 0.0314159563382296, 0, -1, 0, 0.0471239196061774, 0, -1, 0, 0.0628318553606069, 0, -1, 0, 0.0785398191709529, 0, -1, 0, 0.0942477829694017, 0, -1, 0, 0.109955746755903, 0, -1, 0, 0.125663735945915, 0, -1, 0, 0.141371674293154, 0, -1, 0, 0.157079662481811, 0, -1, 0, 0.172787601782731, 0, -1, 0, 0.188495565509641, 0, -1, 0, 0.204203552285659, 0, -1, 0, 0.219911492927686, 0, -1, 0, 0.235619456618827, 0, -1, 0, 0.251327420298049, 0, -1, 0, 0.267035383965345, 0, -1, 0, 0.282743368625402, 0, -1, 0, 0.298451331893353, 0, -1, 0, 0.314159295161302, 0, -1, 0, 0.329867258429249, 0, -1, 0, 0.345575202123032, 0, -1, 0, 0.361283165718809, 0, -1, 0, 0.376991148233097, 0, -1, 0, 0.392699092874596, 0, -1, 0, 0.408407074768996, 0, -1, 0, 0.424115019982697, 0, -1, 0, 0.439823001304893, 0, -1, 0, 0.455530964572841, 0, -1, 0, 0.471238910555443, 0, -1, 0, 0.486946874055852, 0, -1, 0, 0.502654837544339, 0, -1, 0, 0.518362801020902, 0, -1, 0, 0.534070764485547, 0, -1, 0, 0.549778727938271, 0, -1, 0, 0.565486707448485, 0, -1, 0, 0.581194670716433, 0, -1, 0, 0.596902633984382, 0, -1, 0, 0.612610581629954, 0, -1, 0, 0.628318545023073, 0, -1, 0, 0.644026523788228, 0, -1, 0, 0.659734487056178, 0, -1, 0, 0.675442450324127, 0, -1, 0, 0.691150413592076, 0, -1, 0, 0.706858376860025, 0, -1, 0, 0.722566340127974, 0, -1, 0, 0.738274288441119, 0, -1, 0, 0.753982251738869, 0, -1, 0, 0.769690229931821, 0, -1, 0, 0.785398178298609, 0, -1, 0, 0.801106156467719, 0, -1, 0, 0.816814119735667, 0, -1, 0, 0.832522068048812, 0, -1, 0, 0.848230046271565, 0, -1, 0, 0.863938009539514, 0, -1, 0, 0.879645957691726, 0, -1, 0, 0.895353936075412, 0, -1, 0, 0.911061899343361, 0, -1, 0, 0.92676986261131, 0, -1, 0, 0.942477825879259, 0, -1, 0, 0.958185773524831, 0, -1, 0, 0.97389373665569, 0, -1, 0, 0.989601699774627, 0, -1, 0, 1.00530967895105, 0, -1, 0, 1.02101762597674, 0, -1, 0, 1.03672560548695, 0, -1, 0, 1.0524335687549, 0, -1, 0, 1.0681415151905, 0, -1, 0, 1.0838494952908, 0, -1, 0, 1.0995574412734, 0, -1, 0, 1.1152654218267, 0, -1, 0, 1.13097338509465, 0, -1, 0, 1.1466813483626, 0, -1, 0, 1.16238931163054, 0, -1, 0, 1.17809727489849, 0, -1, 0, 1.19380523816644, 0, -1, 0, 1.20951320143439, 0, -1, 0, 1.22522116470234, 0, -1, 0, 1.24092912797029, 0, -1, 0, 1.25663707097266, 0, -1, 0, 1.27234505450619, 0, -1, 0, 1.28805301777414, 0, -1, 0, 1.30376095964998, 0, -1, 0, 1.31946894431003, 0, -1, 0, 1.33517688537525, 0, -1, 0, 1.35088487084593, 0, -1, 0, 1.36659283411388, 0, -1, 0, 1.38230079738183, 0, -1, 0, 1.39800876064978, 0, -1, 0, 1.41371672391773, 0, -1, 0, 1.42942466226498, 0, -1, 0, 1.44513265045363, 0, -1, 0, 1.46084061372157, 0, -1, 0, 1.47654857698952, 0, -1, 0, 1.49225654025747, 0, -1, 0, 1.50796450352542, 0, -1, 0, 1.52367246679337, 0, -1, 0, 1.53938043006132, 0, -1, 0, 1.55508839332927, 0, -1, 0, 1.57079635659722, 0, -1, 0, 1.58650431807703, 0, -1, 0, 1.60221227955684, 0, -1, 0, 1.61792021465289, 0, -1, 0, 1.63362817720403, 0, -1, 0, 1.64933613972228, 0, -1, 0, 1.66504410220833, 0, -1, 0, 1.68075208695589, 0, -1, 0, 1.69646004843569, 0, -1, 0, 1.7121680099155, 0, -1, 0, 1.72787595184499, 0, -1, 0, 1.74358391418084, 0, -1, 0, 1.75929189435493, 0, -1, 0, 1.77499985583474, 0, -1, 0, 1.79070781731455, 0, -1, 0, 1.80641577879436, 0, -1, 0, 1.82212374027417, 0, -1, 0, 1.83783170175398, 0, -1, 0, 1.85353966323379, 0, -1, 0, 1.8692476247136, 0, -1, 0, 1.88495557403406, 0, -1, 0, 1.90066354767322, 0, -1, 0, 1.91637150915303, 0, -1, 0, 1.93207947063284, 0, -1, 0, 1.94778743211265, 0, -1, 0, 1.96349538427924, 0, -1, 0, 1.97920335507227, 0, -1, 0, 1.99491131655208, 0, -1, 0, 2.01061927803189, 0, -1, 0, 2.02632723214921, 0, -1, 0, 2.04203520099151, 0, -1, 0, 2.05774315599122, 0, -1, 0, 2.07345112395113, 0, -1, 0, 2.08915908543094, 0, -1, 0, 2.10486704691075, 0, -1, 0, 2.12057500839056, 0, -1, 0, 2.13628296537093, 0, -1, 0, 2.15199093135018, 0, -1, 0, 2.16769889282999, 0, -1, 0, 2.1834068543098, 0, -1, 0, 2.19911481578961, 0, -1, 0, 2.21482277726942, 0, -1, 0, 2.23053073874923, 0, -1, 0, 2.24623870022904, 0, -1, 0, 2.26194666170885, 0, -1, 0, 2.27765462318866, 0, -1, 0, 2.29336258466847, 0, -1, 0, 2.30907054525099, 0, -1, 0, 2.32477850762808, 0, -1, 0, 2.34048646910789, 0, -1, 0, 2.3561944305877, 0, -1, 0, 2.37190239206751, 0, -1, 0, 2.38761035354732, 0, -1, 0, 2.40331831502713, 0, -1, 0, 2.41902627770667, 0, -1, 0, 2.43473423798675, 0, -1, 0, 2.45044219946656, 0, -1, 0, 2.46615016094637, 0, -1, 0, 2.48185812242618, 0, -1, 0, 2.49756608390599, 0, -1, 0, 2.5132740453858, 0, -1, 0, 2.52898200686561, 0, -1, 0, 2.54468996834542, 0, -1, 0, 2.56039792982523, 0, -1, 0, 2.57610589580448, 0, -1, 0, 2.59181385278485, 0, -1, 0, 2.60752181952131, 0, -1, 0, 2.62322978139654, 0, -1, 0, 2.63893773722428, 0, -1, 0, 2.65464569870409, 0, -1, 0, 2.6703536601839, 0, -1, 0, 2.68606162166371, 0, -1, 0, 2.70176958314352, 0, -1, 0, 2.71747755292828, 0, -1, 0, 2.73318550610314, 0, -1, 0, 2.74889346758295, 0, -1, 0, 2.76460142906276, 0, -1, 0, 2.78030940093559, 0, -1, 0, 2.79601735202238, 0, -1, 0, 2.81172531350219, 0, -1, 0, 2.82743328714134, 0, -1, 0, 2.84314123646181, 0, -1, 0, 2.85884919794162, 0, -1, 0, 2.87455715942143, 0, -1, 0, 2.89026513571943, 0, -1, 0, 2.90597308238105, 0, -1, 0, 2.92168104386086, 0, -1, 0, 2.93738902240583, 0, -1, 0, 2.95309696682047, 0, -1, 0, 2.96880494699456, 0, -1, 0, 2.98451288978009, 0, -1, 0, 3.0002208512599, 0, -1, 0, 3.01592883408866, 0, -1, 0, 3.03163679651249, 0, -1, 0, 3.04734475896708, 0, -1, 0, 3.06305269717914, 0, -1, 0, 3.07876065865895, 0, -1, 0, 3.09446862013876, 0, -1, 0, 3.11017660910728, 0, -1, 0, 3.12588457172637, 0, -1, 0, 3.14159253438051, 0, -1, 0, 3.15730046784614, 0, -1, 0, 3.17300843111409, 0, -1, 0, 3.18871639438204, 0, -1, 0, 3.20442438516349, 0, -1, 0, 3.22013234788903, 0, -1, 0, 3.2358403106265, 0, -1, 0, 3.25154827337589, 0, -1, 0, 3.2672562361372, 0, -1, 0, 3.28296417398973, 0, -1, 0, 3.29867213725768, 0, -1, 0, 3.31438010052563, 0, -1, 0, 3.33008806379358, 0, -1, 0, 3.34579602706153, 0, -1, 0, 3.36150399032948, 0, -1, 0, 3.37721195359742, 0, -1, 0, 3.39291993865683, 0, -1, 0, 3.40862790152543, 0, -1, 0, 3.42433586440595, 0, -1, 0, 3.44004380666922, 0, -1, 0, 3.45575176993717, 0, -1, 0, 3.47145975311903, 0, -1, 0, 3.48716769647307, 0, -1, 0, 3.50287565974102, 0, -1, 0, 3.51858362300896, 0, -1, 0, 3.53429158627691, 0, -1, 0, 3.54999956787925, 0, -1, 0, 3.56570753086706, 0, -1, 0, 3.58141547608076, 0, -1, 0, 3.59712343934871, 0, -1, 0, 3.61283140261666, 0, -1, 0, 3.62853938293749, 0, -1, 0, 3.64424734598491, 0, -1, 0, 3.6599552924205, 0, -1, 0, 3.67566327211549, 0, -1, 0, 3.6913712189564, 0, -1, 0, 3.70707918222435, 0, -1, 0, 3.7227871454923, 0, -1, 0, 3.73849510876025, 0, -1, 0, 3.7542030720282, 0, -1, 0, 3.76991103529615, 0, -1, 0, 3.78561899856409, 0, -1, 0, 3.80132696183204, 0, -1, 0, 3.81703492509999, 0, -1, 0, 3.83274288836794, 0, -1, 0, 3.84845085163589, 0, -1, 0, 3.86415881490384, 0, -1, 0, 3.87986677817179, 0, -1, 0, 3.89557474143974, 0, -1, 0, 3.91128270470769, 0, -1, 0, 3.92699066797563, 0, -1, 0, 3.94269863124358, 0, -1, 0, 3.95840659451153, 0, -1, 0, 3.97411455777948, 0, -1, 0, 3.98982252104743, 0, -1, 0, 4.00553048431538, 0, -1, 0, 4.02123844758333, 0, -1, 0, 4.03694641085128, 0, -1, 0, 4.05265437411922, 0, -1, 0, 4.06836233738717, 0, -1, 0, 4.08407030065512, 0, -1, 0, 4.09977827954545, 0, -1, 0, 4.11548622719102, 0, -1, 0, 4.13119419045897, 0, -1, 0, 4.14690216979633, 0, -1, 0, 4.16261011699487, 0, -1, 0, 4.17831808026282, 0, -1, 0, 4.1940260601545, 0, -1, 0, 4.20973400679871, 0, -1, 0, 4.22544197006666, 0, -1, 0, 4.24114993333461, 0, -1, 0, 4.25685789660256, 0, -1, 0, 4.27256585987051, 0, -1, 0, 4.28827382313846, 0, -1, 0, 4.30398178640641, 0, -1, 0, 4.31968974967436, 0, -1, 0, 4.3353977129423, 0, -1, 0, 4.35110567621025, 0, -1, 0, 4.36681365905237, 0, -1, 0, 4.38252162266006, 0, -1, 0, 4.3982295660141, 0, -1, 0, 4.41393752928205, 0, -1, 0, 4.42964549255, 0, -1, 0, 4.44535345581795, 0, -1, 0, 4.46106141908589, 0, -1, 0, 4.47676938235384, 0, -1, 0, 4.49247734562179, 0, -1, 0, 4.50818530888974, 0, -1, 0, 4.52389327215769, 0, -1, 0, 4.53960123542564, 0, -1, 0, 4.55530919869359, 0, -1, 0, 4.57101716196154, 0, -1, 0, 4.58672512522949, 0, -1, 0, 4.60243308849743, 0, -1, 0, 4.61814105176538, 0, -1, 0, 4.63384901503333, 0, -1, 0, 4.64955697830128, 0, -1, 0, 4.66526494156923, 0, -1, 0, 4.68097290483718, 0, -1, 0, 4.69668086810513, 0, 1, 0, 1.57079647580651, 0, 1, 0, 1.55508848212243, 0, 1, 0, 1.53938054569433, 0, 1, 0, 1.52367255425449, 0, 1, 0, 1.50796461558216, 0, 1, 0, 1.49225665052607, 0, 1, 0, 1.47654868546998, 0, 1, 0, 1.46084069812092, 0, 1, 0, 1.4451327553578, 0, 1, 0, 1.42942479030171, 0, 1, 0, 1.41371682524563, 0, 1, 0, 1.39800886018954, 0, 1, 0, 1.38230087726732, 0, 1, 0, 1.36659291301219, 0, 1, 0, 1.35088496502127, 0, 1, 0, 1.33517698442327, 0, 1, 0, 1.3194690200909, 0, 1, 0, 1.30376106985301, 0, 1, 0, 1.28805310479692, 0, 1, 0, 1.27234513974083, 0, 1, 0, 1.25663717468474, 0, 1, 0, 1.24092920962866, 0, 1, 0, 1.22522124457257, 0, 1, 0, 1.20951327951648, 0, 1, 0, 1.19380531446039, 0, 1, 0, 1.1780973494043, 0, 1, 0, 1.16238938434821, 0, 1, 0, 1.14668141929213, 0, 1, 0, 1.13097345423604, 0, 1, 0, 1.11526548917995, 0, 1, 0, 1.09955752412386, 0, 1, 0, 1.08384955906777, 0, 1, 0, 1.06814158795204, 0, 1, 0, 1.05243362330352, 0, 1, 0, 1.03672565864285, 0, 1, 0, 1.02101769884342, 0, 1, 0, 1.00530972928789, 0, 1, 0, 0.989601768731242, 0, 1, 0, 0.973893803675153, 0, 1, 0, 0.958185835182143, 0, 1, 0, 0.942477873562977, 0, 1, 0, 0.926769908506889, 0, 1, 0, 0.9110619434508, 0, 1, 0, 0.895353978394712, 0, 1, 0, 0.879646013338623, 0, 1, 0, 0.863938048282535, 0, 1, 0, 0.848230083226448, 0, 1, 0, 0.832522118170359, 0, 1, 0, 0.81681415311427, 0, 1, 0, 0.801106188058182, 0, 1, 0, 0.785398223002093, 0, 1, 0, 0.769690257946005, 0, 1, 0, 0.753982292889917, 0, 1, 0, 0.738274327833828, 0, 1, 0, 0.72256636277774, 0, 1, 0, 0.706858397721651, 0, 1, 0, 0.691150432665564, 0, 1, 0, 0.675442467609476, 0, 1, 0, 0.659734502553387, 0, 1, 0, 0.644026537497299, 0, 1, 0, 0.62831857244121, 0, 1, 0, 0.612610610822045, 0, 1, 0, 0.596902646111307, 0, 1, 0, 0.581194677272944, 0, 1, 0, 0.565486716716294, 0, 1, 0, 0.549778747160768, 0, 1, 0, 0.53407078210468, 0, 1, 0, 0.518362822700662, 0, 1, 0, 0.502654858052152, 0, 1, 0, 0.486946886936415, 0, 1, 0, 0.471238921880328, 0, 1, 0, 0.455530956824239, 0, 1, 0, 0.439822991768149, 0, 1, 0, 0.424115035017016, 0, 1, 0, 0.408407061655973, 0, 1, 0, 0.392699105913112, 0, 1, 0, 0.376991131543798, 0, 1, 0, 0.361283176880732, 0, 1, 0, 0.34557520143162, 0, 1, 0, 0.329867247925603, 0, 1, 0, 0.314159283478793, 0, 1, 0, 0.29845131905344, 0, 1, 0, 0.28274335465026, 0, 1, 0, 0.26703537615118, 0, 1, 0, 0.251327425913285, 0, 1, 0, 0.235619461580914, 0, 1, 0, 0.219911480982912, 0, 1, 0, 0.204203532991992, 0, 1, 0, 0.188495568736876, 0, 1, 0, 0.172787604508933, 0, 1, 0, 0.157079620758557, 0, 1, 0, 0.141371676137448, 0, 1, 0, 0.12566371199534, 0, 1, 0, 0.109955747883268, 0, 1, 0, 0.0942477838019597, 0, 1, 0, 0.0785397954781141, 0, 1, 0, 0.0628318557344613, 0, 1, 0, 0.0471238917497156, 0, 1, 0, 0.0314159277985749, 0, 1, 0, 0.0157079638818289, 0, 0, 1, 0 ]
                      }
                    }
                  ]
                }
              },
              { "Viewpoint":
                {
                  "@description": "Home",
                  "@position": [ 626.553, -20.1971, 183.034 ],
                  "@orientation": [ 0.0211411861244382, 0.999650930723368, -0.0158450923997148, 1.28668345514297 ],
                  "@centerOfRotation": [ 0.313083, 0.491819, -0.0640737 ]
                }
              }
            ]
          }
        },
        { "Transform":
          {
            "@DEF": "Dolphin",
            "-children": [
              { "Transform":
                {
                  "@DEF": "_9",
                  "-children": [
                    { "Shape":
                      {
                        "-appearance": { "Appearance":
                          {
                            "-material": { "Material":
                              {
                                "@specularColor": [ 0, 0.192168, 0.357 ],
                                "@shininess": 0.073718
                              }
                            },
                            "-texture": { "ComposedCubeMapTexture":
                              {
                                "@DEF": "_10",
                                "-front": { "ImageTexture":
                                  {
                                    "@USE": "_1"
                                  }
                                },
                                "-back": { "ImageTexture":
                                  {
                                    "@USE": "_3"
                                  }
                                },
                                "-left": { "ImageTexture":
                                  {
                                    "@USE": "_4"
                                  }
                                },
                                "-right": { "ImageTexture":
                                  {
                                    "@USE": "_5"
                                  }
                                },
                                "-top": { "ImageTexture":
                                  {
                                    "@USE": "_6"
                                  }
                                },
                                "-bottom": { "ImageTexture":
                                  {
                                    "@USE": "_7"
                                  }
                                }
                              }
                            },
                            "-shaders": [
                              { "ProtoInstance":
                                {
                                  "@name": "FresnelShader",
                                  "fieldValue": [
                                    {
                                      "@name": "reflection",
                                      "@value": 0.4
                                    },
                                    {
                                      "@name": "cubeMapTexture",
                                      "-children": [
                                        { "ComposedCubeMapTexture":
                                          {
                                            "@USE": "_10"
                                          }
                                        }
                                      ]
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        },
                        "-geometry": { "ProtoInstance":
                          {
                            "@name": "Dolphin"
                          }
                        }
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        { "ROUTE":
          {
            "@fromNode": "AnimationTimer",
            "@fromField": "fraction_changed",
            "@toNode": "RotationInterpolator",
            "@toField": "set_fraction"
          }
        },
        { "ROUTE":
          {
            "@fromNode": "RotationInterpolator",
            "@fromField": "value_changed",
            "@toNode": "_8",
            "@toField": "rotation"
          }
        }
      ]
    }
  }
}
