#X3D V4.0 utf8 X_ITE V8.6.8

PROFILE Interchange

COMPONENT Followers : 1
COMPONENT PointingDeviceSensor : 1
COMPONENT Scripting : 1

META "comment" "World of Titania"
META "created" "Sat, 25 Nov 2017 08:46:55 GMT"
META "creator" "Holger Seelig"
META "generator" "Titania V4.3.8, http://titania.create3000.de"
META "identifier" "file:///home/holger/Projekte/Sunrise/src/drive/user/test/components/Followers/ColorDamper/ColorDamper.O.x3d"
META "modified" "Mon, 07 Jan 2019 02:19:42 GMT"
META "converter" "x3d-tidy V1.0.14, https://www.npmjs.com/package/x3d-tidy"
META "converted" "Mon, 29 May 2023 17:50:05 GMT"

PROTO ChromaticCircle [
  inputOutput SFFloat value 1
  inputOutput SFVec2f size 2 2
]
{
  Shape {
    geometry DEF Geometry TriangleFanSet {
      fanCount 62
      color Color {
        color [ 1 1 1, 1 0 0, 1 0.1 0, 1 0.2 0, 1 0.3 0, 1 0.4 0, 1 0.5 0, 1 0.6 0, 1 0.7 0, 1 0.8 0, 1 0.9 0, 1 1 0, 0.9 1 0, 0.8 1 0, 0.7 1 0, 0.6 1 0, 0.5 1 0, 0.4 1 0, 0.3 1 0, 0.2 1 0, 0.1 1 0, 0 1 0, 0 1 0.0999999, 0 1 0.2, 0 1 0.3, 0 1 0.4, 0 1 0.5, 0 1 0.6, 0 1 0.7, 0 1 0.8, 0 1 0.9, 0 1 1, 0 0.9 1, 0 0.8 1, 0 0.7 1, 0 0.6 1, 0 0.5 1, 0 0.4 1, 0 0.3 1, 0 0.2 1, 0 0.0999999 1, 0 0 1, 0.0999999 0 1, 0.2 0 1, 0.3 0 1, 0.4 0 1, 0.5 0 1, 0.599999 0 1, 0.699999 0 1, 0.8 0 1, 0.9 0 1, 1 0 1, 1 0 0.900001, 1 0 0.8, 1 0 0.7, 1 0 0.6, 1 0 0.5, 1 0 0.4, 1 0 0.300001, 1 0 0.2, 1 0 0.1, 1 0 0, 1 0 0, 1 0 0, 1 0 0 ]
      }
      coord Coordinate {
        point [ 0 0 0, 1 0 0, 0.994522 0.104528 0, 0.978148 0.207912 0, 0.951057 0.309017 0, 0.913545 0.406737 0, 0.866025 0.5 0, 0.809017 0.587785 0, 0.743145 0.669131 0, 0.669131 0.743145 0, 0.587785 0.809017 0, 0.5 0.866025 0, 0.406737 0.913545 0, 0.309017 0.951057 0, 0.207912 0.978148 0, 0.104528 0.994522 0, 2.22045e-16 1 0, -0.104528 0.994522 0, -0.207912 0.978148 0, -0.309017 0.951057 0, -0.406737 0.913545 0, -0.5 0.866025 0, -0.587785 0.809017 0, -0.669131 0.743145 0, -0.743145 0.669131 0, -0.809017 0.587785 0, -0.866025 0.5 0, -0.913545 0.406737 0, -0.951057 0.309017 0, -0.978148 0.207912 0, -0.994522 0.104528 0, -1 5.66554e-16 0, -0.994522 -0.104528 0, -0.978148 -0.207912 0, -0.951057 -0.309017 0, -0.913545 -0.406737 0, -0.866025 -0.5 0, -0.809017 -0.587785 0, -0.743145 -0.669131 0, -0.669131 -0.743145 0, -0.587785 -0.809017 0, -0.5 -0.866025 0, -0.406737 -0.913545 0, -0.309017 -0.951057 0, -0.207912 -0.978148 0, -0.104528 -0.994522 0, -2.22045e-16 -1 0, 0.104528 -0.994522 0, 0.207912 -0.978148 0, 0.309017 -0.951057 0, 0.406737 -0.913545 0, 0.5 -0.866025 0, 0.587785 -0.809017 0, 0.669131 -0.743145 0, 0.743145 -0.669131 0, 0.809017 -0.587785 0, 0.866025 -0.5 0, 0.913545 -0.406737 0, 0.951057 -0.309017 0, 0.978148 -0.207912 0, 0.994522 -0.104528 0, 1 0 0, 1 0 0, 1 0 0, 1 0 0 ]
      }
    }
  }

  Script {
    inputOutput    SFFloat value IS value
    inputOutput    SFVec2f size IS size
    initializeOnly SFInt32 dimension 60
    initializeOnly SFNode  geometry USE Geometry

    url "ecmascript:

function initialize ()
{
	eventsProcessed ();
}

function eventsProcessed ()
{
	var coordIndex = new MFInt32 ();
	var color      = geometry .color .color;
	var point      = geometry .coord .point;

	var vertex = new SFVec3f (1, 0, 0);
	var scale  = new SFMatrix4f (size .x / 2, 0, 0, 0,
	                                   0, size .y / 2, 0, 0,
	                                   0, 0, 0, 0,
	                                   0, 0, 0, 1);
	                               
	color [0] .setHSV (0, 0, value);
	point [0] = new SFVec3f (0, 0, 0);

	for (var i = 0; i < dimension; ++ i)
	{
		color [i + 1] .setHSV (2 * Math. PI * i / dimension, 1, value);
		point [i + 1] = scale .multMatrixVec (new SFRotation (0, 0, 1, 2 * Math. PI * i / dimension) .multVec (vertex));
	}

	color [color .length] = color [1];
	point [point .length] = point [1];

	geometry .fanCount = new MFInt32 (dimension + 2);
}
"
    directOutput TRUE
  }
}

WorldInfo {
  title "ColorDamper.O"
}

NavigationInfo {
  type [ "NONE", "ANY" ]
}

Background {
  skyColor 0.2 0.2 0.2
}

Viewpoint {
  position 0 0 3
}

DEF Follower ColorDamper { }

DEF SphereButton Transform {
  translation 1.13732 0 0
  scale 0.0630925 0.0630925 0.0630925
  children Shape {
    appearance Appearance {
      material DEF SphereActive Material { }
    }
    geometry Sphere { }
  }
}

DEF ColorSphere Transform {
  scale 0.0446722 0.0446722 0.0446722
  children Shape {
    appearance Appearance {
      material DEF SphereMaterial Material { }
    }
    geometry Sphere { }
  }
}

DEF ChromaticCircleButton Transform {
  children [
    DEF Touch TouchSensor { }
    ChromaticCircle { }
  ]
}

DEF FollowerScript Script {
  inputOnly      SFTime  set_time
  inputOnly      SFBool  set_active
  inputOnly      SFColor set_color
  inputOutput    SFFloat value 1
  outputOnly     SFColor destination_changed
  outputOnly     SFColor color_changed
  outputOnly     SFVec3f translation_changed
  initializeOnly SFNode  touchSensor USE Touch

  url "ecmascript:

function set_time ()
{
	var hue        = Math .atan2 (touchSensor .hitPoint_changed .y, touchSensor .hitPoint_changed .x) 
	var saturation = touchSensor .hitPoint_changed .length ();
	
	if (hue < 0)
		hue = 2 * Math .PI + hue;
	
	destination_changed .setHSV (hue, saturation, value);
}

function set_active (value)
{
	if (value)
		color_changed = new SFColor (0.8, 0, 0);
	
	else
		color_changed = new SFColor (0.8, 0.8, 0.8);
}

function set_color (value)
{
	var hsv = value .getHSV ();

	var x = Math .cos (hsv [0]) * hsv [1];
	var y = Math .sin (hsv [0]) * hsv [1];

	translation_changed	= new SFVec3f (x, y, 0);
}
"
  directOutput TRUE
}

ROUTE Touch.touchTime TO FollowerScript.set_time
ROUTE FollowerScript.destination_changed TO Follower.set_destination
ROUTE Follower.value_changed TO SphereMaterial.set_diffuseColor
ROUTE Follower.value_changed TO FollowerScript.set_color
ROUTE FollowerScript.translation_changed TO ColorSphere.set_translation
ROUTE FollowerScript.color_changed TO SphereActive.set_diffuseColor
ROUTE Follower.isActive TO FollowerScript.set_active
